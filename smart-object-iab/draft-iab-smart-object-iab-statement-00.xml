<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?xml-stylesheet type='text/xsl' href='http://xml.resource.org/authoring/rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="no"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc strict="no"?>
<?rfc compact="no"?>
<?rfc subcompact="no"?>

<rfc category="info" ipr="trust200902" docName="draft-iab-smart-object-statement-00.txt">

  <front>
  <title>IAB Statement on Smart Objects</title>   
    
        <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Internet Architecture Board</organization>
      <address>
        <postal>
          <street>Linnoitustie 6</street>
          <city>Espoo</city>
          <code>02600</code>
          <country>Finland</country>
        </postal>
        <phone>+358 (50) 4871445</phone>
        <email>Hannes.Tschofenig@gmx.net</email>
        <uri>http://www.tschofenig.priv.at</uri>
      </address>
    </author>

	       <author initials="D." surname="McPherson" fullname="Danny McPherson">
            <organization>Internet Architecture Board</organization>
            <address>
                <postal>
                    <street></street>
                    <city></city>
                    <region></region>
                    <code></code>
                    <country>US</country>
                </postal>
                <email>danny@tcb.net</email>
            </address>
        </author>
    <date year="2011"/>
    <keyword>Internet-Draft</keyword>
    <keyword>IAB Statement</keyword>
    <keyword>Smart Objects</keyword>
    <abstract>
    
  <t>The goal of the Internet Engineering Task Force (IETF) is to make the Internet work better. Following the theme "Everything that can be connected will be connected." the work the IETF has been doing is more relevant than ever. When the Internet Architecture Board (IAB) scheduled a workshop on Smart Objects it had intentionally chosen a title that highlights the challenge many engineers and researchers are facing: How should different forms of embedded and constrained devices be interconnected with the currently deployed Internet. The views of the workshop participants had been published in a report and this writeup will describe the IAB's view on the topic and highlight the main challenges the IETF will be facing.</t>

<t>[Note: A separate mailing list has been created for your feedback related to this document 
and it can be found at: TBD ]</t>
</abstract>

  </front>
  <middle>

    <!-- ====================================================================== -->

    <section anchor="introduction" title="Introduction">

<t>The goal of the Internet Engineering Task Force (IETF) is to make the Internet work better. Following the theme "Everything that can be connected will be connected." the work the IETF has been doing is more relevant than ever. When the Internet Architecture Board (IAB) scheduled a workshop on Smart Objects it had intentionally chosen a title that highlights the challenge many engineers and researchers are facing: How should different forms of embedded and constrained devices be interconnected with the currently deployed Internet. The views of the workshop participants had been published in a report and this writeup will describe the IAB's view on the topic and highlight the main challenges the IETF will be facing.</t>

<t>In a publication that uses the somewhat nebulous term "smart object" it is useful to discuss the meaning first before going deeper into discussing the topic. Other terms used in this context are "Internet of Things (IoT)", "Machine-to-Machine communication", etc. We use the term smart object since it is less overloaded with expectations from various marketing campaigns. In <xref target="I-D.iab-smart-object-workshop"/> we refer to smart objects as devices with energy, bandwidth, memory, size, cost, etc. constraints. This is clearly a very fuzzy definition and attempts to be a bit more specific with device classification, as done in Section 2.1 of <xref target="I-D.bormann-lwig-guidance"/>, may not be suitable in all cases either. Clearly, there is a continuum in devices and there is no hard line to draw between devices that require "special treatment" in the way that it is often discussed under the umbrella of this topic. Understanding this unclear boundary between "regular" Internet devices (like laptops, netbooks, phones, routers, home gateways, or desktops) connected to the Internet and other forms of devices (like sensors) is important to understand our line of argument.</t>  

<t>The IETF has produced a number of important specifications that make the Interwork work. These protocols are immediately relevant for any smart object development and deployment. In the context of one use case of smart objects, the Smart Grid (and smart meters in particular, RFC 6272 "Internet Protocols for the Smart Grid" <xref target="RFC6272"/> identifies a range of IETF developed protocols that can be utilized by those people seeking guidance on how to construct an appropriate Internet Protocol Suite profile for the Smart Grid. The wide range of protocols listed in that document illustrates the view of the author of RFC 6272 on how applicable IETF protocols are.</t>

<t>
In drawing conclusions from the prior IETF work and from the IAB workshop it is useful to look back at the criteria for success of the Internet. Luckily, various IAB publications provide valuable insight into the history and many of the statements are still very much applicable today and to the discussion on smart objects as well.</t>

<t>RFC 1958 <xref target="RFC1958"/> says: <list style="empty"> 
<t>"The Internet and its architecture have grown in evolutionary fashion from modest beginnings, rather than from a Grand Plan.", and adds</t>
<t>"A good analogy for the development of the Internet is that of constantly renewing the individual streets and buildings of a city, rather than razing the city and rebuilding it."</t>
</list> 
</t>

<t> It is difficult to resist the temptation to re-design everything from scratch without any detailed analysis of what current problems are and what lead to these problems. Often, a thorough analysis could provide more value for the Internet community at large than yet another strawman protocol solution. We see the attempt for re-design in many places; sometimes only at the marketing level but often also in ignorance of what had been developed in the past.</t>

<t>Needless to say that extending protocols to fulfill new uses and to add new functionality may be hard. The IETF community had made this experience in a number of protocol areas where need for incremental deployability may not have been taken serious enough at the beginning. Without going into specific protocol development efforts, we would like to quote a few statements to illustrate that this is not a new discussion:<list style="empty"> 

<t>In 2005 <xref target="IPoptions"/> studied the usage of IP options-enabled packets in the Internet and found that overall, approximately half of Internet paths drop packets with options making extensions using IP options "less ideal" for extending IP. </t>
<t>In 2011 <xref target="TCPextensions"/> tested the behavior of networks with regard to various TCP extensions and conclude: "From our results we conclude the middleboxes implementing layer 4 functionality are very common — at least 25% of paths interfered with TCP in some way beyond basic firewalling."</t>
</list> 
</t>
	 
<t>Currently, the IAB is developing guidance on how to extend protocols <xref target="I-D.iab-extension-recs"/>.</t>

<t>As it can be seen from the examples above the question about extensibility and incremental deployment is not only about how well protocol developers anticipate future use cases. In fact, the IAB publication RFC 5218 on "What Makes For a Successful Protocol?" <xref target="RFC5218"/> defines the ultimate goal to develop protocols that are deployed beyond their envisioned use cases.</t> 
<t>In addition to many extensibility design decisions protocol architects have to make developments in the Internet regarding middleboxes <xref target="RFC3234"/> clearly contribute to the inability to easily deploy new functionality. RFC 1958 <xref target="RFC1958"/> considers this aspect and says "... the community believes that the goal is connectivity, the tool is the Internet Protocol, and the intelligence is end to end rather than hidden in the network." This statement is challenged more than ever with the perceived need to develop clever intermediaries interacting with dump end devices but we have to keep in mind what RFC 3724 has to say about this crucial aspect: "One desirable consequence of the end-to-end principle is protection of innovation. Requiring modification in the network in order to deploy new services is still typically more difficult than modifying end nodes." RFC 4924 <xref target="RFC4924"/> adds that a network that does not filter or transform the data that it carries may be said to be "transparent" or "oblivious" to the content of packets. Networks that provide oblivious transport enable the deployment of new services without requiring changes to the core. It is this flexibility that is perhaps both the Internet’s most essential characteristic as well as one of the most important contributors to its success. </t>

<t>
It is valuable to look back at earlier IETF publication. For example, RFC 1263 <xref target="RFC1263"/> different protocol design strategies and makes an interesting observation relevant in this context: 

<list style="empty"> 

<t>"Of course, the biggest problem with our approach [Editor's Note: which is the preference 
   to design either new protocols from scratch or to design them in a non-backwards 
   compatible way based on existing protocols] is that it is not
   compatible with the existing standardization process. We hope to be
   able to design and distribute protocols in less time than it takes a
   standards committee to agree on an acceptable meeting time.  This is
   inevitable because the basic problem with networking is the
   standardization process. Over the last several years, there has been
   a push in the research community for lightweight protocols, when in
   fact what is needed are lightweight standards.  Also note that we
   have not proposed to implement some entirely new set of 'superior'
   communications protocols, we have simply proposed a system for making
   necessary changes to the existing protocol suites fast enough to keep
   up with the underlying change in the network.  In fact, the first
   standards organization that realizes that the primary impediment to
   standardization is poor logistical support will probably win."
</t>
</list> 
</t>

<t>While this document was written in 1991 where the standardization process in the 
Internet community was far more lightweight than today (since fewer stakeholders were interested 
in participating in the standards process) it is remarkable to read these thoughts since 
they are even more relevant today.</t>

<t>While RFC 1263 <xref target="RFC1263"/> certainly provides good food for thought it also gives recommendations that may not always be appropriate 
for the smart object space, such as the preference for a so-called evolutionary protocol 
design where new versions of the protocols are allowed to be non-backwards compatible and 
all run independently on the same device. RFC 1263 says: 
<list style="empty"> 
<t>"... the only real disadvantage of protocol evolution is the amount of
   memory required to run several versions of the same protocol.
   Fortunately, memory is not the scarcest resource in modern
   workstations (it may, however, be at a premium in the BSD kernel and
   its derivatives). Since old versions may rarely if ever be executed,
   the old versions can be swapped out to disk with little performance
   loss. Finally, since this cost is explicit, there is a huge incentive
   to eliminate old protocol versions from the network."
</t>
</list> 
</t>
<t>Even though this is common practice today to run many different software applications that have similar functionality (for example, multiple Instant Messaging clients) it may indeed not be the most preferred approach for smart objects that have severe limitations regarding RAM and flash memory.</t>

<t>To deal with exactly this problem the discussions at the IAB workshop, see Section 3.1.2 of <xref target="I-D.iab-smart-object-workshop"/>, revealed the preference of many participants to develop domain specific profile that select a minimum sub-set of protocols needed for a specific usage environment. Various standardization organizations and industry fora are currently engaged in such an activity of defining their preferred profile. In <xref target="I-D.arkko-core-sleepy-sensors"/> Arkko, et al. explain how the complexity of such a profile heavily depends on the chosen communication architecture and suggests one possible profile with limited communication capabilities, which also translates into a small code size. Ultimately, however, the number of domains where smart objects can be used is essentially unbounded and so are the ever evolving protocols and protocol extensions. Saying "no" to a new protocol stack that only differs in minor ways may be appropriate but could be interpreted as blocking innovation and, as RFC 1263 <xref target="RFC1263"/> describes it nicely "In the long term, we envision protocols being designed on an application by application basis, without the need for central approval.". ("Central approval" here refers to the approval process that happens in standards developing organizations.)</t> 

<t>So, how can we allow fast speed of innovation with distributed developments and at the same time accomplish a high level of interoperability?</t>

<t>Clearly, standardization of every domain specific profile will not be the solution. Many domain specific profiles are optimizations that will be already obsoleted by technological developments (e.g., new protocol developments,), new security threats, new stakeholders entering the system or changing needs of existing stakeholders, new business models, changed usage patterns, etc. RFC 1263 <xref target="RFC1263"/> state the problem precisely: "The most important conclusion of this RFC is that protocol change
   happens and is currently happening at a very respectable clip. We simply propose to
   explicitly deal with the changes rather keep trying to hold back the
   flood."</t>

<t>Even worse, different stakeholders that are part of the Internet milieu have interests that may be adverse to each other, and these parties each vie to favor their particular interests. In "<xref target="Tussels"/> Clark et al. call this process “the tussle" and ask the important question "How can we, as designers, build systems with desired characteristics and improve the chances that they come out the way we want?". In an attempt to answer that question they develop a high-level principle: 
<list style="empty"> 

<t>"Design for variation in outcome, so that the outcome can be different in different places, and the tussle takes place within the design, not by distorting or violating it. Do not design so as to dictate the outcome. Rigid designs will be broken; designs that permit variation will flex under pressure and survive."</t>
</list> 
</t> 

<t>In order to accomplish this Clark et al. suggest to 
<list style="numbers"> 
<t>Break complex systems into modular parts.</t>
<t>Design for choice</t>
</list> 
</t>

<t>These are valid guidelines and many IETF protocols have taken exactly this approach, namely to identify building blocks that can be used in a wide variety of deployments. Others then put them together in a way that suites their needs. There are, however, limits to this approach. Certain building blocks are only useful in a limited set of architectural variants and producing generic building blocks requires a good understanding of the different architectural variants and often limits the ability to optimize. Sometimes the value of an individual building block is hard for others to understand without providing the larger context, which requires at least one architectural variant illustrated.</t> 

<t>While this building block approach has been fairly successful so far it does not lead to the level of interoperability many want: they want interoperability of the entire system rather than interoperability at a specific protocol level. Hence, there is probably the most important architectural question that arises, namely "What level of interoperability is desired by the Internet protocol engineer?"</t>

<t>In the diagrams below we illustrate a few interoperability scenarios with dramatically different interoperability needs. Note that these are highly simplified versions of what protocol architects are faced with since there are often parties involved in the protocol exchange, and the entire protocol stack has to be considered. As such, the required coordination and agreement between the different stakeholders is likely to be far more challenging. We do, however, believe that they illustrate the point that the desired level of interoperability in an attempt to start standardization needs to be carefully chosen.</t>

<t><xref target="no-interop"/> shows a typical deployment of many Internet applications: an application service provider (called example.com in our illustration) wants to make an application available to its customers and they are provided with the application software. The application works with example.com's costumer and with nobody else; there is no interoperability with third parties. Example.com may still re-use standardized protocol components to speed-up the process of developing it's software, which is certainly useful from a time-to-market and cost efficiency point of view.</t>
<t>
          <figure anchor="no-interop" title="Proprietary Deployment">
            <artwork>
              <![CDATA[
         .................                       
         |  Application  |                       
         |  Service      |                       
         |  Provider     |                       
         |  Example.com  |                       
         |_______________|                       
             _,   .                              
           ,'      `.      Proprietary           
        _,'          `.    Protocol              
      ,'               `._                       
    -'                    -                      
 ,''''''''|           ,''''''''|  Application
 | Device |           | Device |  provided by    
 | 'Foo'  |           | 'Bar'  |  Example.com    
 |........'           |........'                 
           ]]></artwork>
          </figure>
        </t>
<t>In a next step an application service provider, a.example.com in <xref target="backend-interop"/> wants to support interworking with other third parties, such as b.example.com.
a.example.com is still able to enhance software provided to its own customers in the speed it feels necessary. Typically, the level of standardization between the different providers 
depends on the number of players and their position in the market.</t>
 <t>
          <figure anchor="backend-interop" title="Backend Interoperability">
            <artwork>
              <![CDATA[
                                           .................
                                           |  Application  |
                                          .|  Service      |
                                       ,-` |  Provider     |
                                     .`    | b.example.com |
                                  ,-`      |_______________|
                                .`                          
          .................  ,-`           .................
          |  Application  |-`              |  Application  |
          |  Service      |----------------|  Service      |
          |  Provider     |   Standardized |  Provider     |
          | a.example.com |-,     Protocol | c.example.com |
          |_______________|  '.            |_______________|
               _,              `',                          
 Proprietary ,'                   '.             ...        
 Protocol _,'                       `',    .................
        ,'                             '.  |  Application  |
      -'                                 `'|  Service      |
   ,''''''''|  Device Software             |  Provider     |
   | Device |  provided by                 | z.example.com |
   | 'Foo'  |  a.example.com               |_______________|
   |........'                                                                                                           
           ]]></artwork>
          </figure>
        </t>
		
		
<t>In our last scenario, as shown in <xref target="full-interop"/>, are scenario is shown 
where two random devices developed by independent software manufacturers are desired to interwork. 
The number of software manufacturers certainly plays a role but quite clearly the need for standardization 
is quite high due to the interoperability need. As an example from <xref target="I-D.iab-smart-object-workshop"/> consider a lightbulb that talks 
to a light switch, with the requirement that each of them may be manufactured by different companies.</t>
<t>
          <figure anchor="full-interop" title="Full Interoperability">
            <artwork>
              <![CDATA[
                     _,,,,    ,,,,                       
                    /     -'``    \                      
                   |               |                     
                   \               |                     
                   /               \                     
 ,''''''''|       /   Standardized  .       ,''''''''|   
 | Device | ------|---Protocol-------\------| Device |   
 | 'Foo'  |        .                 |      | 'Bar'  |   
 |........'         `'-              /      |........'   
                       \      _-...-`                    
 Independent            `. ,.'              Independent  
 Software                 `                 Software     
 Manufacturer                               Manufacturer                                       
           ]]></artwork>
          </figure>
        </t>


<t>A secondary question, although related to interoperability, concerns software updates. For many reasons, not only for additing new functionality, it can be said that many smart objects will need a solid software update mechanism. Regularly uploading new functionality to smart objects may not be possible for certain classes of constrained devices, namely those with severe memory limitations. For those cases, if possible, the interoperability need can be shifted away from the client-to-server interface to the backend infrastructure (shown in <xref target="backend-interop"/>) instead of falling back to a model closer to <xref target="full-interop"/>. In such a deployment the application service provider offering a specific smart object uses regular IP connectivity to upload data to a Web storage. Then, for interaction with other devices or with an end user interested in viewing or processing the resulting data the full range of Internet/Web capabilities are at their disposal. For example, when the sensor data is to be integrated in a new social network then Web functionality can be used to share the data between the different sites in a mashup style communication.</t> 

<!-- 
<t>The previously described functionality works fine with even the smallest devices but one can lower the capabilities even further such that even end-to-end Internet communication is not possible anymore. While work is ongoing to offer very lightweight application protocols, such as the Constrained Application Protocol (CoAP) <xref target="I-D.ietf-core-coap"/>, but one can imagine cases where even these protocols (together with the rest of the protocol stack) are too heavyweight. While a wireless mouse and a wireless keyboard today do not use IP one can also imagine that this is a suitable deployment scenario. These devices come, for example, with USB dongles that are then plugged into another device and these peripherals only work with the manufacturer provided dongle. This begs the question: Where does it make sense to pay the price of standardization and where are proprietary developments more economical? 
</t>
--> 

<t>The Web had gotten its ultimate software update mechanisms with JavaScript but of course it may not be the right choice of software distribution for smart objects. The overall concept of allowing multiple parties to upload code is nevertheless attractive. We would like to stress the multiple party aspect since the interests of the different stakeholders involved in offering and using smart objects may be diverse. End users are more likely to have needs that are not aligned with those providing the hardware, those developing software, those providing access to the Internet, or those who offer value-added services. <xref target="I-D.tschofenig-post-standardization"/> discusses this topic with a focus on mobile code distribution using JavaScript and tells an important lesson applicable also to the smart object area, namely that lowering the standardization needs for the client-to-server communication offers a number of advantages for application service providers. <xref target="code-distribution"/> illustrates the architecture graphically where an end device is able to use standardized protocols (such as HTTP and JavaScript) to obtain software components from different application providers dynamically downloaded, which are then executed on the device in an isolated fashion (for security and privacy reasons). </t>
		<t>
          <figure anchor="code-distribution" title="Dynamic Code Distribution">
            <artwork>
              <![CDATA[
  .................                .................  
  |  Application  |                |  Application  |  
  |  Service      |                |  Service      |  
  |  Provider     |                |  Provider     |  
  | a.example.com |                | b.example.com |  
  |_______________|                |_______________|  
         -,                               _.          
           `.,                         _-`            
 Standardized ',                    _-`  Standardized 
       Protocol `',               ,'  Protocol        
                   `.,         _,'                    
                      ',     ,'                       
                        `' -'                         
                     ,''''''''|  Device Software      
                     | Device |  dynamically uploaded 
                     | 'Foo'  |  by a.example.com or  
                     |........'  b.example.com        
           ]]></artwork>
          </figure>
        </t>
		
</section> 

    <!-- ====================================================================== -->


<section title="Recommendations"> 

<t>Based on the previous description we suggest:
<list style="symbols"> 
<t>Focus on the development of building blocks that are usable in a number of deployment scenarios. A number of the recommendations in <xref target="I-D.iab-smart-object-workshop"/> provide a good starting point.</t>
<t>Aim for a generic design instead of optimizing early.</t>
<t>Avoid standardization entire protocol stacks and profiles. The likelihood that those will be out-dated at the time when standardization is finished is far too high, particularly at the application layer.</t>
<t>Aim for a deployment model with a low interoperability needs first before increasing the standardization needs.</t>
<t>Explore the ability to use mobile code distribution also on smart objects. Take the good experience from the Web environment and fix the mistakes.</t>
<t>Take existing deployment constraints into consideration to allow for a smooth transition path.</t>
<t>Middleboxes were introduced in the believe that they can shield attacks against end systems and to provide "value-added services" of all kinds, such as performance enhancements. The temptation for providing these value-added services is huge but there lies the danger: introducing adding additional stakeholders that need to agree on any new feature being introduced slows down the ability to innovate at a high speed.</t>
<t>The IETF has also kept a good balance between standardization work that has almost research character (long-term) and deployment relevant (short-term) work. This balance is useful for the participants to ensure that forward-looking researchers are sharing their views with those closer to deployment problems.</t> 
</list> 
</t>
</section> 

<!-- ====================================================================== -->

<section anchor="SecurityConsiderations" title="Security Considerations">

<t>Section 3.3 of <xref target="I-D.iab-smart-object-workshop"/> reminds us about the IETF workstyle regarding security: 
<list style="empty"> 
<t>   In the development of smart object applications, as with any other
   protocol application solution, security has to be considered early in
   the design process.  As such, the recommendations currently provided
   to IETF protocol architects, such as RFC 3552 <xref target="RFC3552"/>, and RFC 4101
   <xref target="RFC4101"/>, apply also to the smart object space.
</t> 
</list> 
</t> 
   
<t>In the IETF security functionality is incorporated into each and every protocol to deal with threats that are specific to them. It is extremely unlikely that there is a one-size-fits-all security solution given the large number of choices for the  ”right” protocol architecture (particularly at the application layer). For this purpose <xref target="RFC6272"/> offers a survey of IETF security mechanisms instead of suggesting a preferred one.</t> 

<t>In <xref target="Laws"/> we provided 10 high level recommendations regarding security design for smart objects, those are:

<list style="numbers"> 
<t>Do Not Design for a Single Credential Type.</t>
<t>Do Not Design for a Single Authentication and Key Exchange Protocol.</t>
<t>Consider Crypto-Agility From the Beginning.</t>
<t>Security Requirements Vary.</t>
<t>Link Layer Security is not a Substitute for Application Layer Security.</t>
<t>Application Layer Security is not a Substitute for Link Layer Security either.</t>
<t>Consider Updates.</t>
<t>Don’t Skip Security.</t>
<t>Reuse is Good, if Done Wisely.</t>
<t>Take Available Specifications into Consideration.</t>
</list> 
</t>
<t>Detailed descriptions are provided in <xref target="Laws"/>.</t>

</section>

    <!-- ====================================================================== -->

<section anchor="PrivacyConsiderations" title="Privacy Considerations">
<t>TBD: Some deployments of smart objects are imposed on end users (by governments) and are therefore not voluntary.
Also talk about some of the downsides of the interoperability models. Point to IAB privacy considerations draft.</t>

<t>In 1980, the Organization for Economic Co-operation and Development
   (OECD) published eight Guidelines on the Protection of Privacy and
   Trans-Border Flows of Personal Data <xref target="OECD"/>, which are often referred
   to as Fair Information Practices (FIPs). The FIPs, like other privacy principles, are abstract in their nature and have to be applied to a specific context. <xref target="I-D.iab-privacy-considerations"/> provides guidance for engineers to consider privacy in the design of Internet protocols.
</t> 

<t>While many smart object use cases are no different than any other application design from a privacy point of view with respct to the ability of the guidance of <xref target="I-D.iab-privacy-considerations"/> some deployments are imposed on end users by governments. With often limited ability to get exposed to collection and processing of personal data end users are therefore taken their ability to excercise their consent right, as provided in the FIPs. 
Consequently, a series of problems are created as a side effect, as had been seen already in the past in the area of road pricing systems. In those cases governments have often focused on dealing with privacy at the level of a privacy notice rather than by building privacy into the design of the system, which is advocated by data protection authorities and more in the realm of the work done by the IETF.
</t> 

<t>Leaving better privacy protection purely in the hands of industry has also shown to raise challenges. The interoperability models described in this document highlights that standardized interfaces are not needed in all cases, or is even desirable. This leaves all technical choices to those who have shown to offer little incentives to protect end users privacy. Depending on the choice of certain underlying technologies various privacy problems may be inherited by the upper layer protocols and therefore difficult to resolve. Many smart objects leave users little ability for privacy-improving configuration changes and software updates by users are in many systems also limited. While technologies exist that can be applied also to smart objects to involve users in authorization decisions before data sharing takes place their usage in many smart object deployments remains yet to be seen.</t>

<t>As a summary, for an Internet protocol architect the guidelines described in <xref target="I-D.iab-privacy-considerations"/> are applicable. For those looking at privacy from a deployment point of view the following additional guidelines are suggested: 
<list style="hanging"> 
 <t hangText="Transparency:"> The data processing should be completely transparent to the smart object owner and user(s). Users should be put in a position to easily understand what items of personal information concerning them are collected and stored, as well for what purposes they are sought.</t>
 <t hangText="Data Quality:">Smart objects should only store personal data which are adequate, relevant and not excessive in relation to the purpose(s) for which they are processed. The use of anonymised data should be preferred wherever possible.</t>
<t hangText="Data Access:">Before deployment starts it is necessary to consider who can access the personal data recorded in smart objects and under which conditions, particularly with regard to data subjects, to whom (in principle) full and free access to his/her own data should be recognised. Appropriate and clear procedures should be established in order to allow data subjects to properly exercise their rights. A privacy and data protection impact assessment is considered a useful tool for this analysis.</t><t hangText="Data Security: ">Standardized data security measures to prevent unlawful access, alteration or loss of smart object data need to be defined and universally adopted. Robust cryptographic techniques and proper authentication frameworks should be used to limit the risk of unintended data transfers or harmful attacks. The end-user should be able to verify, in a straight-forward manner, that smart objects are in full compliance with these standards.</t>
</list> 
</t> 
</section>

   
    <!-- ====================================================================== -->

    <section anchor="iana" title="IANA Considerations">
	<t>This document does not require actions by IANA. </t>
    </section>

    <!-- ====================================================================== -->
	
    <section title="Acknowledgements">
      <t>We would like to thank the participants of the IAB Smart Object workshop for their 
      input to the overall discussion about smart objects.</t>
     <!-- <t>Furthermore, we would like TBD for their review comments.</t> --> 
    </section>
  </middle>
  <!-- ====================================================================== -->
  <back>

    <references title="Normative References"> 
     	<?rfc include="reference.I-D.iab-smart-object-workshop"?>
     	<?rfc include="reference.I-D.tschofenig-post-standardization"?>
     	<?rfc include="reference.I-D.iab-extension-recs"?>
     	<?rfc include="reference.I-D.iab-privacy-considerations"?>
		<?rfc include="reference.RFC.1263"?>
		<?rfc include="reference.RFC.6272"?>
		<?rfc include="reference.RFC.1958"?>
		<?rfc include="reference.RFC.4924"?>
		<?rfc include="reference.RFC.3234"?>
		<?rfc include="reference.RFC.5218"?>
		<?rfc include="reference.RFC.3552"?>
		<?rfc include="reference.RFC.4101"?>
    </references> 
	
    <references title="Informative References"> 
     	<?rfc include="reference.I-D.arkko-core-sleepy-sensors"?>
     	<?rfc include="reference.I-D.ietf-core-coap"?>
     	<?rfc include="reference.I-D.bormann-lwig-guidance"?>
     	<?rfc include="reference.I-D.rosenberg-internet-waist-hourglass"?>

      <reference anchor="IPoptions">
        <front>
          <title>IP options are not an option, Technical Report UCB/EECS</title>
            <author initials="R." surname="Fonseca" fullname="R. Fonseca">
              <organization/>
            </author>
            <author initials="G." surname="Porter" fullname="G. Porter">
              <organization/>
            </author>
            <author initials="R." surname="Katz" fullname="R. Katz">
              <organization/>
            </author>
            <author initials="S." surname="Shenker" fullname="S. Shenker">
              <organization/>
            </author>
            <author initials="I." surname="Stoica" fullname="I. Stoica">
              <organization/>
            </author>
          <date year="2005"/>
        </front>
        <format type='HTML'
        target='http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.123.4251' />
      </reference>
      
         <reference anchor="Laws">
        <front>
          <title>The 10 Laws of Smart Object Security Design, In Proc. of IAB Workshop on 'Interconnecting Smart Objects with the Internet', Prague, Czech Repulic</title>
            <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
              <organization/>
            </author>
            <author initials="B." surname="Aboba" fullname="Bernard Aboba">
              <organization/>
            </author>
          <date month="March" year="2011"/>
        </front>
        <format type='PDF'
        target='http://www.iab.org/wp-content/IAB-uploads/2011/03/Tschofenig.pdf' />
      </reference>
      
      <reference anchor="TCPextensions">
        <front>
          <title>Is it Still Possible to Extend TCP? In Proc. ACM Internet Measurement Conference (IMC), Berlin, Germany</title>
            <author initials="M." surname="Honda" fullname="M. Honda">
              <organization/>
            </author>
            <author initials="Y." surname="Nishida" fullname="Y. Nishida">
              <organization/>
            </author>
            <author initials="A." surname="Greenhalgh" fullname="A. Greenhalgh">
              <organization/>
            </author>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization/>
            </author>
            <author initials="H." surname="Tokuda" fullname="H. Tokuda">
              <organization/>
            </author>
          <date month="Nov" year="2011"/>
        </front>
        <format type='PDF'
        target='http://conferences.sigcomm.org/imc/2011/docs/p181.pdf' />
      </reference>

      <reference anchor="Tussels">
        <front>
          <title>Tussle in Cyberspace: Defining Tomorrow's Internet, In
              Proc. ACM SIGCOMM</title>
            <author initials="D." surname="Clark" fullname="D. Clark">
              <organization/>
            </author>
            <author initials="J." surname="Wroslawski" fullname="J. Wroslawski">
              <organization/>
            </author>
            <author initials="K." surname="Sollins" fullname="K. Sollins">
              <organization/>
            </author>
            <author initials="R." surname="Braden" fullname="R. Braden">
              <organization/>
            </author>
          <date year="2002"/>
        </front>
        <format type='HTML'
        target='http://www.acm.org/sigcomm/sigcomm2002/papers/tussle.html' />
      </reference>

   
       <reference anchor="OECD">
        <front>
          <title>OECD Guidelines on the Protection of Privacy and Transborder Flows of Personal Data</title>
          <author fullname="" initials="" surname="">
            <organization>Organization for Economic Co-operation and Development</organization>
          </author>
          <date year="1980"/>
        </front>
        <seriesInfo
          name="available at (September 2010)"
          value=", http://www.oecd.org/EN/document/0,,EN-document-0-nodirectorate-no-24-10255-0,00.html"/>
        <format target="http://www.oecd.org/EN/document/0,,EN-document-0-nodirectorate-no-24-10255-0,00.html" type="HTML"/>
      </reference>
	</references>
  </back>
</rfc>
