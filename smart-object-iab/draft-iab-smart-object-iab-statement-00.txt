


Network Working Group                                      H. Tschofenig
Internet-Draft                                              D. McPherson
Intended status: Informational               Internet Architecture Board
Expires: May 11, 2012                                   November 8, 2011


                     IAB Statement on Smart Objects
                draft-iab-smart-object-statement-00.txt

Abstract

   When the Internet Architecture Board (IAB) scheduled a workshop on
   Smart Objects it had intentionally chosen a title that highlights the
   challenge many engineers and researchers are facing: How should
   different forms of embedded and constrained devices be interconnected
   with the currently deployed Internet?  Following the theme
   "Everything that can be connected will be connected." the IETF
   community is asked to develop views on how Internet protocols can be
   put on smart objects.  The workshop participants contributed their
   views on the topic and a report was published.

   This writeup describes the IAB's view on smart objects and provides a
   few recommendations for the Internet protocol engineers interested in
   developing protocols and protocol suites for usage with smart
   objects.

   [Note: A separate mailing list has been created for your feedback
   related to this document and it can be found at: TBD ]

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 11, 2012.

Copyright Notice




Tschofenig & McPherson    Expires May 11, 2012                  [Page 1]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   Copyright (c) 2011 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Recommendations  . . . . . . . . . . . . . . . . . . . . . . . 12
   3.  Security Considerations  . . . . . . . . . . . . . . . . . . . 13
   4.  Privacy Considerations . . . . . . . . . . . . . . . . . . . . 14
   5.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 16
   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 17
   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 18
     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 18
     7.2.  Informative References . . . . . . . . . . . . . . . . . . 19
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 20

























Tschofenig & McPherson    Expires May 11, 2012                  [Page 2]

Internet-Draft       IAB Statement on Smart Objects        November 2011


1.  Introduction

   When the Internet Architecture Board (IAB) scheduled a workshop on
   Smart Objects it had intentionally chosen a title that highlights the
   challenge many engineers and researchers are facing: How should
   different forms of embedded and constrained devices be interconnected
   with the currently deployed Internet?  Following the theme
   "Everything that can be connected will be connected." the IETF
   community is asked to develop views on how Internet protocols can be
   put on smart objects.  The workshop participants contributed their
   views on the topic and a report was published.

   This document uses the term "smart object" rather than "Internet of
   Things (IoT)", or "Machine-to-Machine communication" since they have
   a stronger marketing flavour.  In [1] we refer to smart objects as
   devices with energy, bandwidth, memory, size, cost, etc. constraints.
   This is a fuzzy definition and attempts to be more specific based on
   a device classification, as done in Section 2.1 of [13], may not be
   suitable in all cases either.  Clearly, there is a continuum in
   device capabilities and there is no hard line to draw between devices
   that require "special treatment" and those who don't.  Understanding
   this unclear boundary between "regular" Internet devices (like
   laptops, netbooks, phones, routers, home gateways, or desktops)
   connected to the Internet and other forms of devices (like sensors)
   is important to understand our line of argument.

   The IETF has produced a number of important specifications that make
   the Interwork work.  These protocols are immediately relevant for any
   smart object development and deployment.  In the context of one use
   case of smart objects, the Smart Grid (and smart meters in
   particular, RFC 6272 "Internet Protocols for the Smart Grid" [2]
   identifies a range of IETF protocols that can be utilized by those
   people seeking guidance on how to construct an appropriate Internet
   Protocol Suite profile for the Smart Grid.  The wide range of
   protocols listed in that document illustrates the view of the author
   of RFC 6272 on how applicable IETF protocols are.

   In drawing conclusions from the prior IETF work and from the IAB
   workshop it is useful to look back at the criteria for success of the
   Internet.  Luckily, various IAB publications provide valuable insight
   into the history.  Many of the statements are very much applicable to
   the discussion on smart objects.

   It is difficult to resist the temptation to re-design everything from
   scratch without any detailed analysis of what current problems are
   and what lead to these problems.  Often, a thorough analysis could
   provide value for the Internet community at large.  We see the
   attempt for re-design in many places; sometimes only at the marketing



Tschofenig & McPherson    Expires May 11, 2012                  [Page 3]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   level but often also in ignorance of what had been developed in the
   past.

   RFC 1958 [3] says:

      "The Internet and its architecture have grown in evolutionary
      fashion from modest beginnings, rather than from a Grand Plan.",
      and adds

      "A good analogy for the development of the Internet is that of
      constantly renewing the individual streets and buildings of a
      city, rather than razing the city and rebuilding it."

   Needless to say that extending protocols to fulfill new uses and to
   add new functionality may be hard.  The IETF community had made this
   experience in a number of protocol areas where need for incremental
   deployability may not have been taken serious enough at the
   beginning.  Without going into specific protocol development efforts,
   we would like to quote a few statements to illustrate that this is
   not a new discussion:

      In 2005 [14] studied the usage of IP options-enabled packets in
      the Internet and found that overall, approximately half of
      Internet paths drop packets with options making extensions using
      IP options "less ideal" for extending IP.

      In 2011 [15] tested the behavior of networks with regard to
      various TCP extensions and conclude: "From our results we conclude
      the middleboxes implementing layer 4 functionality are very common
      -- at least 25% of paths interfered with TCP in some way beyond
      basic firewalling."

   Currently, the IAB is developing guidance on how to extend protocols
   [4].  As it can be seen from the examples above the question about
   extensibility and incremental deployment is not only about how well
   protocol developers anticipate future use cases.  In fact, the IAB
   publication RFC 5218 on "What Makes For a Successful Protocol?" [5]
   defines the ultimate goal to develop protocols that are deployed
   beyond their envisioned use cases.

   In addition to many extensibility design decisions protocol
   architects have to make developments in the Internet regarding
   middleboxes [6] clearly contribute to the inability to easily deploy
   new functionality.  RFC 1958 [3] considers this aspect and says "...
   the community believes that the goal is connectivity, the tool is the
   Internet Protocol, and the intelligence is end to end rather than
   hidden in the network."  This statement is challenged more than ever
   with the perceived need to develop clever intermediaries interacting



Tschofenig & McPherson    Expires May 11, 2012                  [Page 4]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   with dump end devices but we have to keep in mind what RFC 3724 has
   to say about this crucial aspect: "One desirable consequence of the
   end-to-end principle is protection of innovation.  Requiring
   modification in the network in order to deploy new services is still
   typically more difficult than modifying end nodes."  RFC 4924 [7]
   adds that a network that does not filter or transform the data that
   it carries may be said to be "transparent" or "oblivious" to the
   content of packets.  Networks that provide oblivious transport enable
   the deployment of new services without requiring changes to the core.
   It is this flexibility that is perhaps both the Internet's most
   essential characteristic as well as one of the most important
   contributors to its success.

   It is valuable to look back at earlier IETF publication.  For
   example, RFC 1263 [8] different protocol design strategies and makes
   an interesting observation relevant in this context:

      "Of course, the biggest problem with our approach [Editor's Note:
      which is the preference to design either new protocols from
      scratch or to design them in a non-backwards compatible way based
      on existing protocols] is that it is not compatible with the
      existing standardization process.  We hope to be able to design
      and distribute protocols in less time than it takes a standards
      committee to agree on an acceptable meeting time.  This is
      inevitable because the basic problem with networking is the
      standardization process.  Over the last several years, there has
      been a push in the research community for lightweight protocols,
      when in fact what is needed are lightweight standards.  Also note
      that we have not proposed to implement some entirely new set of
      'superior' communications protocols, we have simply proposed a
      system for making necessary changes to the existing protocol
      suites fast enough to keep up with the underlying change in the
      network.  In fact, the first standards organization that realizes
      that the primary impediment to standardization is poor logistical
      support will probably win."

   While this document was written in 1991 where the standardization
   process in the Internet community was far more lightweight than today
   (since fewer stakeholders were interested in participating in the
   standards process) it is remarkable to read these thoughts since they
   are even more relevant today.

   While RFC 1263 [8] certainly provides good food for thought it also
   gives recommendations that may not always be appropriate for the
   smart object space, such as the preference for a so-called
   evolutionary protocol design where new versions of the protocols are
   allowed to be non-backwards compatible and all run independently on
   the same device.  RFC 1263 says:



Tschofenig & McPherson    Expires May 11, 2012                  [Page 5]

Internet-Draft       IAB Statement on Smart Objects        November 2011


      "... the only real disadvantage of protocol evolution is the
      amount of memory required to run several versions of the same
      protocol.  Fortunately, memory is not the scarcest resource in
      modern workstations (it may, however, be at a premium in the BSD
      kernel and its derivatives).  Since old versions may rarely if
      ever be executed, the old versions can be swapped out to disk with
      little performance loss.  Finally, since this cost is explicit,
      there is a huge incentive to eliminate old protocol versions from
      the network."

   Even though this is common practice today to run many different
   software applications that have similar functionality (for example,
   multiple Instant Messaging clients) it may indeed not be the most
   preferred approach for smart objects that have severe limitations
   regarding RAM and flash memory.

   To deal with exactly this problem the discussions at the IAB
   workshop, see Section 3.1.2 of [1], revealed the preference of many
   participants to develop domain specific profile that select a minimum
   sub-set of protocols needed for a specific usage environment.
   Various standardization organizations and industry fora are currently
   engaged in such an activity of defining their preferred profile.  In
   [16] Arkko, et al. explain how the complexity of such a profile
   heavily depends on the chosen communication architecture and suggests
   one possible profile with limited communication capabilities, which
   also translates into a small code size.  Ultimately, however, the
   number of domains where smart objects can be used is essentially
   unbounded and so are the ever evolving protocols and protocol
   extensions.  Saying "no" to a new protocol stack that only differs in
   minor ways may be appropriate but could be interpreted as blocking
   innovation and, as RFC 1263 [8] describes it nicely "In the long
   term, we envision protocols being designed on an application by
   application basis, without the need for central approval.".
   ("Central approval" here refers to the approval process that happens
   in standards developing organizations.)

   So, how can we allow fast speed of innovation with distributed
   developments and at the same time accomplish a high level of
   interoperability?

   Clearly, standardization of every domain specific profile will not be
   the solution.  Many domain specific profiles are optimizations that
   will be already obsoleted by technological developments (e.g., new
   protocol developments,), new security threats, new stakeholders
   entering the system or changing needs of existing stakeholders, new
   business models, changed usage patterns, etc.  RFC 1263 [8] state the
   problem precisely: "The most important conclusion of this RFC is that
   protocol change happens and is currently happening at a very



Tschofenig & McPherson    Expires May 11, 2012                  [Page 6]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   respectable clip.  We simply propose to explicitly deal with the
   changes rather keep trying to hold back the flood."

   Even worse, different stakeholders that are part of the Internet
   milieu have interests that may be adverse to each other, and these
   parties each vie to favor their particular interests.  In "[17] Clark
   et al. call this process "the tussle" and ask the important question
   "How can we, as designers, build systems with desired characteristics
   and improve the chances that they come out the way we want?".  In an
   attempt to answer that question they develop a high-level principle:

      "Design for variation in outcome, so that the outcome can be
      different in different places, and the tussle takes place within
      the design, not by distorting or violating it.  Do not design so
      as to dictate the outcome.  Rigid designs will be broken; designs
      that permit variation will flex under pressure and survive."

   In order to accomplish this Clark et al. suggest to

   1.  Break complex systems into modular parts.

   2.  Design for choice

   These are valid guidelines and many IETF protocols have taken exactly
   this approach, namely to identify building blocks that can be used in
   a wide variety of deployments.  Others then put them together in a
   way that suites their needs.  There are, however, limits to this
   approach.  Certain building blocks are only useful in a limited set
   of architectural variants and producing generic building blocks
   requires a good understanding of the different architectural variants
   and often limits the ability to optimize.  Sometimes the value of an
   individual building block is hard for others to understand without
   providing the larger context, which requires at least to illustrate
   one architectural variant.

   Since many IETF protocols are used as building blocks by other
   organizations and in depoyments one can argue that this approach has
   been fairly successful.  It may, however, not lead to the level of
   interoperability many want: they want interoperability of the entire
   system rather than interoperability at a specific protocol level.
   Consequently an important architectural question arises, namely "What
   level of interoperability should Internet protocol engineers aim
   for?"

   In the diagrams below we illustrate a few interoperability scenarios
   with different interoperability needs.  Note that these are highly
   simplified versions of what protocol architects are faced with since
   there are often more parties involved in a sequence of required



Tschofenig & McPherson    Expires May 11, 2012                  [Page 7]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   protocol exchanges, and the entire protocol stack has to be
   considered - not just one layer.  As such, the required coordination
   and agreement between the different stakeholders is likely to be far
   more challenging than illustrated below.  We do, however, believe
   that these figures illustrate that the desired level of
   interoperability needs to be carefully chosen.

   Figure 1 shows a typical deployment of many Internet applications: an
   application service provider (called example.com in our illustration)
   wants to make an application available to its customers and they are
   provided with the application software.  The application works with
   example.com's costumers and with nobody else; there is no
   interoperability with third parties (at the application layer at
   least).  Example.com may still re-use standardized protocol
   components to speed-up the process of developing it's software, which
   is certainly useful from a time-to-market and cost efficiency point
   of view.  Example.com will also have to rely on the protocol stack
   below to have their customers access the Internet in order to use
   their application software.



            .................
            |  Application  |
            |  Service      |
            |  Provider     |
            |  Example.com  |
            |_______________|
                _,   .
              ,'      `.      Proprietary
           _,'          `.    Protocol
         ,'               `._
       -'                    -
    ,''''''''|           ,''''''''|  Application
    | Device |           | Device |  provided by
    | 'Foo'  |           | 'Bar'  |  Example.com
    |........'           |........'

                     Figure 1: Proprietary Deployment

   In a next step an application service provider, a.example.com in
   Figure 2 wants to provide interworking with other third parties, such
   as b.example.com. a.example.com is still able to enhance software
   provided to its own customers in the speed it feels necessary.
   Typically, the level of standardization between the different
   providers depends on the number of players and their position in the
   market.




Tschofenig & McPherson    Expires May 11, 2012                  [Page 8]

Internet-Draft       IAB Statement on Smart Objects        November 2011


                                              .................
                                              |  Application  |
                                             .|  Service      |
                                          ,-` |  Provider     |
                                        .`    | b.example.com |
                                     ,-`      |_______________|
                                   .`
             .................  ,-`           .................
             |  Application  |-`              |  Application  |
             |  Service      |----------------|  Service      |
             |  Provider     |   Standardized |  Provider     |
             | a.example.com |-,     Protocol | c.example.com |
             |_______________|  '.            |_______________|
                  _,              `',
    Proprietary ,'                   '.             ...
    Protocol _,'                       `',    .................
           ,'                             '.  |  Application  |
         -'                                 `'|  Service      |
      ,''''''''|  Device Software             |  Provider     |
      | Device |  provided by                 | z.example.com |
      | 'Foo'  |  a.example.com               |_______________|
      |........'

                    Figure 2: Backend Interoperability

   In our next scenario, as shown in Figure 3, two random devices
   developed by independent software manufacturers are desired to
   interwork.  The number of software manufacturers certainly plays a
   role but quite clearly the need for standardization is quite high
   due.  To pick an example from [1], consider a lightbulb that talks to
   a light switch with the requirement that each of them may be
   manufactured by different companies.  Since these are quite
   constrained devices their protocol stack needs to be fully specified.


















Tschofenig & McPherson    Expires May 11, 2012                  [Page 9]

Internet-Draft       IAB Statement on Smart Objects        November 2011


                        _,,,,    ,,,,
                       /     -'``    \
                      |               |
                      \               |
                      /               \
    ,''''''''|       /   Standardized  .       ,''''''''|
    | Device | ------|---Protocol-------\------| Device |
    | 'Foo'  |        .                 |      | 'Bar'  |
    |........'         `'-              /      |........'
                          \      _-...-`
    Independent            `. ,.'              Independent
    Software                 `                 Software
    Manufacturer                               Manufacturer

                      Figure 3: Full Interoperability

   A secondary question, although related to interoperability, concerns
   software updates.  For many reasons, not only for additing new
   functionality, it can be said that many smart objects will need a
   solid software update mechanism.  Regularly uploading new
   functionality to smart objects may not be possible for certain
   classes of constrained devices, namely those with severe memory
   limitations.  For those cases, if possible, the interoperability need
   can be shifted away from the client-to-server interface to the
   backend infrastructure (shown in Figure 2) instead of falling back to
   a model closer to Figure 3.  In such a deployment the application
   service provider offering a specific smart object uses regular IP
   connectivity to upload data to a Web storage.  Then, for interaction
   with other devices or with an end user interested in viewing or
   processing the resulting data the full range of Internet/Web
   capabilities are at their disposal.  For example, when the sensor
   data is to be integrated in a new social network then Web
   functionality can be used to share the data between the different
   sites in a mashup style communication.

   The Web had gotten its ultimate software update mechanisms with
   JavaScript but of course it may not be the right choice of software
   distribution for smart objects.  The overall concept of allowing
   multiple parties to upload code is nevertheless attractive.  We would
   like to stress the multiple party aspect since the interests of the
   different stakeholders involved in offering and using smart objects
   may be diverse.  End users are more likely to have needs that are not
   aligned with those providing the hardware, those developing software,
   those providing access to the Internet, or those who offer value-
   added services. [9] discusses this topic with a focus on mobile code
   distribution using JavaScript and tells an important lesson
   applicable also to the smart object area, namely that lowering the
   standardization needs for the client-to-server communication offers a



Tschofenig & McPherson    Expires May 11, 2012                 [Page 10]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   number of advantages for application service providers.  Figure 4
   illustrates the architecture graphically where an end device is able
   to use standardized protocols (such as HTTP and JavaScript) to obtain
   software components from different application providers dynamically
   downloaded, which are then executed on the device in an isolated
   fashion (for security and privacy reasons).



     .................                .................
     |  Application  |                |  Application  |
     |  Service      |                |  Service      |
     |  Provider     |                |  Provider     |
     | a.example.com |                | b.example.com |
     |_______________|                |_______________|
            -,                               _.
              `.,                         _-`
    Standardized ',                    _-`  Standardized
          Protocol `',               ,'  Protocol
                      `.,         _,'
                         ',     ,'
                           `' -'
                        ,''''''''|  Device Software
                        | Device |  dynamically uploaded
                        | 'Foo'  |  by a.example.com or
                        |........'  b.example.com

                    Figure 4: Dynamic Code Distribution























Tschofenig & McPherson    Expires May 11, 2012                 [Page 11]

Internet-Draft       IAB Statement on Smart Objects        November 2011


2.  Recommendations

   Based on the previous description we suggest:

   o  Focus on the development of building blocks that are usable in a
      number of deployment scenarios.  A number of the recommendations
      in [1] provide a good starting point.

   o  Aim for a generic design instead of optimizing early.

   o  Avoid standardizing entire protocol stacks and profiles.  The
      likelihood that those will be out-dated at the time when
      standardization is finished is far too high, particularly with
      application layer standards.  Profiles only focusing at the lower
      layers have more change for success due to the slower innovation
      cycles, which are caused by the large number of players that need
      to make changes to their infrastructure.

   o  Aim for a deployment model with a low interoperability needs first
      before increasing the standardization needs.

   o  Explore the ability to use mobile code distribution also on smart
      objects.  Take the good experience from the Web environment and
      fix the mistakes.

   o  Take existing deployment constraints into consideration to allow
      for a smooth transition path.

   o  Middleboxes were introduced in the believe that they can shield
      attacks against end systems and to provide "value-added services"
      of all kinds, such as performance enhancements.  The temptation
      for providing these value-added services is huge but there lies
      the danger: introducing adding additional stakeholders that need
      to agree on any new feature being introduced slows down the
      ability to innovate at a high speed.

   o  The IETF has also kept a good balance between standardization work
      that has almost research character (long-term) and deployment
      relevant (short-term) work.  This balance is useful for the
      participants to ensure that forward-looking researchers are
      sharing their views with those closer to deployment problems.










Tschofenig & McPherson    Expires May 11, 2012                 [Page 12]

Internet-Draft       IAB Statement on Smart Objects        November 2011


3.  Security Considerations

   Section 3.3 of [1] reminds us about the IETF workstyle regarding
   security:

      In the development of smart object applications, as with any other
      protocol application solution, security has to be considered early
      in the design process.  As such, the recommendations currently
      provided to IETF protocol architects, such as RFC 3552 [10], and
      RFC 4101 [11], apply also to the smart object space.

   In the IETF security functionality is incorporated into each and
   every protocol to deal with threats that are specific to them.  It is
   extremely unlikely that there is a one-size-fits-all security
   solution given the large number of choices for the "right" protocol
   architecture (particularly at the application layer).  For this
   purpose [2] offers a survey of IETF security mechanisms instead of
   suggesting a preferred one.

   In [18] we provided 10 high level recommendations regarding security
   design for smart objects, those are:

   1.   Do Not Design for a Single Credential Type.

   2.   Do Not Design for a Single Authentication and Key Exchange
        Protocol.

   3.   Consider Crypto-Agility From the Beginning.

   4.   Security Requirements Vary.

   5.   Link Layer Security is not a Substitute for Application Layer
        Security.

   6.   Application Layer Security is not a Substitute for Link Layer
        Security either.

   7.   Consider Updates.

   8.   Don't Skip Security.

   9.   Reuse is Good, if Done Wisely.

   10.  Take Available Specifications into Consideration.

   Detailed descriptions are provided in [18].





Tschofenig & McPherson    Expires May 11, 2012                 [Page 13]

Internet-Draft       IAB Statement on Smart Objects        November 2011


4.  Privacy Considerations

   TBD: Some deployments of smart objects are imposed on end users (by
   governments) and are therefore not voluntary.  Also talk about some
   of the downsides of the interoperability models.  Point to IAB
   privacy considerations draft.

   In 1980, the Organization for Economic Co-operation and Development
   (OECD) published eight Guidelines on the Protection of Privacy and
   Trans-Border Flows of Personal Data [19], which are often referred to
   as Fair Information Practices (FIPs).  The FIPs, like other privacy
   principles, are abstract in their nature and have to be applied to a
   specific context. [12] provides guidance for engineers to consider
   privacy in the design of Internet protocols.

   While many smart object use cases are no different than any other
   application design from a privacy point of view with respct to the
   ability of the guidance of [12] some deployments are imposed on end
   users by governments.  With often limited ability to get exposed to
   collection and processing of personal data end users are therefore
   taken their ability to excercise their consent right, as provided in
   the FIPs.  Consequently, a series of problems are created as a side
   effect, as had been seen already in the past in the area of road
   pricing systems.  In those cases governments have often focused on
   dealing with privacy at the level of a privacy notice rather than by
   building privacy into the design of the system, which is advocated by
   data protection authorities and more in the realm of the work done by
   the IETF.

   Leaving better privacy protection purely in the hands of industry has
   also shown to raise challenges.  The interoperability models
   described in this document highlights that standardized interfaces
   are not needed in all cases, or is even desirable.  This leaves all
   technical choices to those who have shown to offer little incentives
   to protect end users privacy.  Depending on the choice of certain
   underlying technologies various privacy problems may be inherited by
   the upper layer protocols and therefore difficult to resolve.  Many
   smart objects leave users little ability for privacy-improving
   configuration changes and software updates by users are in many
   systems also limited.  While technologies exist that can be applied
   also to smart objects to involve users in authorization decisions
   before data sharing takes place their usage in many smart object
   deployments remains yet to be seen.

   As a summary, for an Internet protocol architect the guidelines
   described in [12] are applicable.  For those looking at privacy from
   a deployment point of view the following additional guidelines are
   suggested:



Tschofenig & McPherson    Expires May 11, 2012                 [Page 14]

Internet-Draft       IAB Statement on Smart Objects        November 2011


   Transparency:  The data processing should be completely transparent
      to the smart object owner and user(s).  Users should be put in a
      position to easily understand what items of personal information
      concerning them are collected and stored, as well for what
      purposes they are sought.

   Data Quality:  Smart objects should only store personal data which
      are adequate, relevant and not excessive in relation to the
      purpose(s) for which they are processed.  The use of anonymised
      data should be preferred wherever possible.

   Data Access:  Before deployment starts it is necessary to consider
      who can access the personal data recorded in smart objects and
      under which conditions, particularly with regard to data subjects,
      to whom (in principle) full and free access to his/her own data
      should be recognised.  Appropriate and clear procedures should be
      established in order to allow data subjects to properly exercise
      their rights.  A privacy and data protection impact assessment is
      considered a useful tool for this analysis.

   Data Security:   Standardized data security measures to prevent
      unlawful access, alteration or loss of smart object data need to
      be defined and universally adopted.  Robust cryptographic
      techniques and proper authentication frameworks should be used to
      limit the risk of unintended data transfers or harmful attacks.
      The end-user should be able to verify, in a straight-forward
      manner, that smart objects are in full compliance with these
      standards.























Tschofenig & McPherson    Expires May 11, 2012                 [Page 15]

Internet-Draft       IAB Statement on Smart Objects        November 2011


5.  IANA Considerations

   This document does not require actions by IANA.
















































Tschofenig & McPherson    Expires May 11, 2012                 [Page 16]

Internet-Draft       IAB Statement on Smart Objects        November 2011


6.  Acknowledgements

   We would like to thank the participants of the IAB Smart Object
   workshop for their input to the overall discussion about smart
   objects.














































Tschofenig & McPherson    Expires May 11, 2012                 [Page 17]

Internet-Draft       IAB Statement on Smart Objects        November 2011


7.  References

7.1.  Normative References

   [1]   Tschofenig, H. and J. Arkko, "Report from the 'Interconnecting
         Smart Objects with the Internet' Workshop, 25th March 2011,
         Prague", draft-iab-smart-object-workshop-06 (work in progress),
         October 2011.

   [2]   Baker, F. and D. Meyer, "Internet Protocols for the Smart
         Grid", RFC 6272, June 2011.

   [3]   Carpenter, B., "Architectural Principles of the Internet",
         RFC 1958, June 1996.

   [4]   Carpenter, B., Aboba, B., and S. Cheshire, "Design
         Considerations for Protocol Extensions",
         draft-iab-extension-recs-09 (work in progress), October 2011.

   [5]   Thaler, D. and B. Aboba, "What Makes For a Successful
         Protocol?", RFC 5218, July 2008.

   [6]   Carpenter, B. and S. Brim, "Middleboxes: Taxonomy and Issues",
         RFC 3234, February 2002.

   [7]   Aboba, B. and E. Davies, "Reflections on Internet
         Transparency", RFC 4924, July 2007.

   [8]   O'Malley, S. and L. Peterson, "TCP Extensions Considered
         Harmful", RFC 1263, October 1991.

   [9]   Tschofenig, H., Aboba, B., Peterson, J., and D. McPherson,
         "Trends in Web Applications and the Implications on
         Standardization", draft-tschofenig-post-standardization-01
         (work in progress), October 2011.

   [10]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC Text on
         Security Considerations", BCP 72, RFC 3552, July 2003.

   [11]  Rescorla, E. and IAB, "Writing Protocol Models", RFC 4101,
         June 2005.

   [12]  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J., and J.
         Morris, "Privacy Considerations for Internet Protocols",
         draft-iab-privacy-considerations-01 (work in progress),
         October 2011.





Tschofenig & McPherson    Expires May 11, 2012                 [Page 18]

Internet-Draft       IAB Statement on Smart Objects        November 2011


7.2.  Informative References

   [13]  Bormann, C., "Guidance for Light-Weight Implementations of the
         Internet Protocol Suite", draft-bormann-lwig-guidance-00 (work
         in progress), July 2011.

   [14]  Fonseca, R., Porter, G., Katz, R., Shenker, S., and I. Stoica,
         "IP options are not an option, Technical Report UCB/EECS",
         2005.

   [15]  Honda, M., Nishida, Y., Greenhalgh, A., Handley, M., and H.
         Tokuda, "Is it Still Possible to Extend TCP? In Proc. ACM
         Internet Measurement Conference (IMC), Berlin, Germany",
         Nov 2011.

   [16]  Arkko, J., Rissanen, H., Loreto, S., Turanyi, Z., and O. Novo,
         "Implementing Tiny COAP Sensors",
         draft-arkko-core-sleepy-sensors-01 (work in progress),
         July 2011.

   [17]  Clark, D., Wroslawski, J., Sollins, K., and R. Braden, "Tussle
         in Cyberspace: Defining Tomorrow's Internet, In Proc. ACM
         SIGCOMM", 2002.

   [18]  Tschofenig, H. and B. Aboba, "The 10 Laws of Smart Object
         Security Design, In Proc. of IAB Workshop on 'Interconnecting
         Smart Objects with the Internet', Prague, Czech Repulic",
         March 2011.

   [19]  Organization for Economic Co-operation and Development, "OECD
         Guidelines on the Protection of Privacy and Transborder Flows
         of Personal Data", available at (September 2010) , http://
         www.oecd.org/EN/document/
         0,,EN-document-0-nodirectorate-no-24-10255-0,00.html, 1980.

   [20]  Shelby, Z., Hartke, K., Bormann, C., and B. Frank, "Constrained
         Application Protocol (CoAP)", draft-ietf-core-coap-08 (work in
         progress), October 2011.

   [21]  Rosenberg, J., "UDP and TCP as the New Waist of the Internet
         Hourglass", draft-rosenberg-internet-waist-hourglass-00 (work
         in progress), February 2008.









Tschofenig & McPherson    Expires May 11, 2012                 [Page 19]

Internet-Draft       IAB Statement on Smart Objects        November 2011


Authors' Addresses

   Hannes Tschofenig
   Internet Architecture Board
   Linnoitustie 6
   Espoo  02600
   Finland

   Phone: +358 (50) 4871445
   Email: Hannes.Tschofenig@gmx.net
   URI:   http://www.tschofenig.priv.at


   Danny McPherson
   Internet Architecture Board
   US

   Email: danny@tcb.net

































Tschofenig & McPherson    Expires May 11, 2012                 [Page 20]

