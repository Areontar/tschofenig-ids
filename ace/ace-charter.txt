Draft Charter V0.2 - Authentication and Authorization for Constrained Environment (ACE)

The IETF has a long history in developing three party authentication and authorization protocols for distributed environments. Examples include Kerberos, the Public Key Infrastructure (PKI), the Authentication, Authorization, and Accounting (AAA) infrastructure, and the Web Authorization Protocol (OAuth). All these protocols enjoy widespread deployment on the Internet. Although they all aim to solve the same goal they offer quite different functions and utilize different message exchanges. These differences are motivated by the main deployment use cases they were designed for. 

Constrained devices also raise authentication and authorization questions. For example, a door lock has to authorize the person seeking access using a digital key. Where are the authorization decisions stored? How does the digital key communicate with the lock? Does the lock interact with an authorization server to obtain authorization information? How can access be granted to other persons temporarily? How can access be revoked? These types of questions have been answered by existing protocols although for use cases outside the smart object environment.  

As observed in earlier work in the IETF on smart objects, Internet protocols can be applied to almost any environment, often only requiring minor tweaking and profiling. Requirements derived from use cases indicate the suitability of already existing work, such as OAuth, for smart objects. Some of the features designed for OAuth were, however, inspired by the use of the protocol in the Web and are not ideally suitable for use in a constrained environment. Additional requirements that need to be taken into account are the lack of a suitable user-interface for obtaining the consent of the user, typically constraints of embedded devices regarding main memory, code size, battery power, bandwidth limitations, the inability of embedded devices to contact an identity management/authorization server in real-time with every access request, and the use of different application layer protocols (such as the use of the Constrained Application Protocol (CoAP) instead of HTTP). 

This working group therefore aims to use an existing authentication, and authorization protocol and profile it for use with constrained devices. A profile takes all the relevant specifications, selects a subset of them and restricts the options within each of the specification. The benefit of doing so is clear. First, existing work can be leveraged and the group benefits from the  implementation experience. Second, a standardized solution for federated authentication and authorization will help to stimulate the deployment of security mechanisms in an Internet of Things environment. 

Some functionality may, however, not be available in existing specifications and for those cases new functionality has to be standardized. In context of this work it is foreseen that an authorization policy language needs to be defined, which allows the authorization server to encode authorization decisions for use by a resource server that holds a protected data. 

To be successful this working group requires expertise in security, privacy, and a good understanding of usability in the constraint environment space. This work does not make the assumption that the party offering application layer services is always the same party offering network access services. The group uses OAuth 2.0 as a starting point for a solution. 

Document Milestones

TBD  Collect use case and derive requirements

TBD  Develop a profile suitable for use in a constrained IoT environment based on OAuth 2.0. 

TBD  Define how to use access tokens in CoAP to request access OAuth 2.0 protected resources.
   
TBD  Define authorization policy language and encoding that are carried within access tokens.


