<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?><!DOCTYPE rfc SYSTEM "rfc2629.dtd" [<!ENTITY RFC6962   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6962.xml"><!ENTITY RFC6698   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6698.xml"><!ENTITY RFC2119   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"><!ENTITY RFC4033   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml"><!ENTITY RFC4035   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4035.xml"><!ENTITY RFC4034   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4034.xml"><!ENTITY RFC6066   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6066.xml"><!ENTITY I-D.ietf-websec-key-pinning PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-websec-key-pinning.xml"><!ENTITY I-D.perrin-tls-tack PUBLIC "" "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.perrin-tls-tack.xml"><!ENTITY RFC3280   PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3280.xml">]><rfc category="info" docName="draft-tschofenig-iab-webpki-evolution-00.txt"     ipr="trust200902">         <?rfc toc="yes" ?>  <?rfc symrefs="yes" ?>  <?rfc sortrefs="yes"?>  <?rfc rfcedstyle="yes" ?>  <?rfc subcompact="no"?>  <?rfc compact="no"?>  <?rfc strict="no"?>  <front>    <title abbrev="WebPKI Evolution">Evolving the Web Public Key Infrastructure</title>        <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">      <organization>IAB Security Program</organization>      <address>        <postal>          <street> </street>          <city> </city>          <code> </code>          <country> </country>        </postal>        <email>Hannes.Tschofenig@gmx.net</email>      </address>    </author>	<author initials="R." surname="Housley" fullname="Russ Housley">      <organization>IAB Security Program</organization>      <address>        <postal>          <street> </street>          <city> </city>          <code> </code>          <country> </country>        </postal>        <email>housley@vigilsec.com</email>      </address>    </author>    <author initials="L." surname="Lynch" fullname="Lucy Lynch">      <organization>IAB Security Program</organization>      <address>        <postal>          <street> </street>          <city> </city>          <code> </code>          <country> </country>        </postal>        <email>lynch@isoc.org</email>      </address>    </author>	 <author initials="K." surname="O'Donoghue" fullname="K. O'Donoghue">      <organization>IAB Security Program</organization>      <address>        <postal>          <street> </street>          <city> </city>          <code> </code>          <country> </country>        </postal>        <email>odonoghue@isoc.org</email>      </address>    </author>	 <author initials="E." surname="Lear" fullname="Eliot Lear">      <organization>IAB Security Program</organization>      <address>        <postal>          <street> </street>          <city> </city>          <code> </code>          <country> </country>        </postal>        <email>elear@cisco.com</email>      </address>    </author>	    <date year="2013"/>    <area>Internet Architecture Board</area>    <workgroup></workgroup>    <keyword>Internet-Draft</keyword>    <abstract>      <t>The problems with the WebPKI have received the attention by the Internet security community when DigiNotar, a Dutch certificate authority, had a security breach in 2011 and in the same year a Comodo affiliate was compromised. Both cases lead to fraudulent issue of certificates and raise questions regarding the strength of the WebPKI used by so many applications.</t>	  <t>Almost 2 years have passed since these incidents and various standardization activities have happened in the meanwhile offering new technical solutions to make the public key infrastructure more resilient.</t>      <t>The important question, however, is which of the technical solutions will get widespread deployment? In this document we compare the different technical solutions in an attempt to engage the impacted stakeholders to trigger deployment actions to improve the status quo. This document does not include any recommendations what techniques to use.</t>    </abstract>  </front>  <middle>    <section anchor="intro" title="Introduction">      <t>High-profile data breaches and security incidents on the Web are gaining increasing attention from the public, the press, and governments. A few examples may illustrate the problems: DigiNotar, a Dutch certificate authority, had a security breach <xref target="DigiNotar"/> and in the same year a Comodo affiliate was compromised <xref target="Comodo"/>. Both cases lead to fraudulent issue of certificates.</t>      <t>Public Key Infrastructure (PKI) makes use of a trusted third party, the certificate authority (CA), to bind the subject name to a public key. A CA may, however, get compromised despite the best security practices and operational procedures. The main problem, however, is that any CA can issue a certificate for any domain name. One compromised CA is therefore able to impact the security of the entire public key infrastructure. In the case of DigiNotar the attacker was able to issue certificates for Google services even though Google never made use of services from DigiNotar and might not have ever heard of that CA before.</t>      <t>Furthermore, over time browsers and applications increased the number of trust anchors that are shipped pre-installed. Depending on software the number of trust anchors may exceed 600, as reported by the Electronic Frontier Foundation (EFF) in their SSL Observatory study <xref target="SSL-Observatory"/>. While the larger number provides choice for relying parties regarding the CA they can select for obtaining a certificate there is also a downside: with today's WebPKI set-up it is sufficient to compromise a single CA to impact the security for all relying parties. Many users and researchers were surprised about the large number of trust anchors installed in normal operating systems and browsers without having an easy way to adjust that list to their preferences.</t>	  <t>These developments have led to a number of standardization activities in response to these developments. In this document we briefly summarize the available technical solutions and include an assessment about who needs to make changes, what type of benefits are provided, and what dependencies exist. The investigated solutions include DANE <xref target="RFC6698"/>, Certificate Transparency <xref target="RFC6962"/>, Public Key Pinning 	  <xref target="I-D.ietf-websec-key-pinning"/>, TACK <xref target="I-D.perrin-tls-tack"/>, ... [what else? Perspectives, Sovereign Keys, Mecai, Convergence, DetecTor ].</t> 	  	  <t>While there are other challenges with security on the Web, such as user interface problems with certificate warnings, insecure use of cookies, cross-site scripting attacks, injection attacks, etc., this document focuses on improving the public key infrastructure only. It is also worth reminding ourselves that the Web public key infrastructure is not only used for Web applications but also for a range of other applications, including smart phone apps. Furthermore, other public key infrastructures that operate under a different regime with different policies may suffer from similar problems. Consequently, the solution techniques discussed in this document are also useful for these other PKI deployments.</t>	  	  <t>The main purpose of this document is to provide an overview of the technical solutions. This description will help us to develop a roadmap for the deployment of the best solutions to improve the overall security of the public key infrastructure.</t>	  	  <t>Final note: There are also process solutions, such as stricter audits of CAs with the aim to improve operational practices, and these are not described in this document. These measures will be useful in addition to the technical solutions described in this document. Alone they will, however, not address the underlying problem.</t>	</section> 		<section anchor="terms" title="Terminology">		<t>This document uses the following terms from from RFC 3280 <xref target="RFC3280"/>:	<list style="hanging">	   <t hangText="end entity:"> user of PKI certificates and/or end user system that is               the subject of a certificate.</t>	   <t hangText="CA:">certification authority</t>	   </list> 	</t>	</section> 		<section anchor="solutions" title="Technical Solutions">	  	  <section title="DNS-Based Authentication of Named Entities (DANE)">	    <t>DANE <xref target="RFC6698"/> offers the option to use the DNS infrastructure to store certificates. DANE is envisioned as a preferable basis for binding public keys to DNS names, because the entities that vouch for the binding of public key data to DNS names are the same entities responsible for managing the DNS names in question.</t>      <t>Distributing certificates via the DNS does, however, require DNSSEC. With the help of DNSSEC <xref target="RFC4033"/><xref target="RFC4034"/><xref target="RFC4035"/> this offers an opportunity to eliminate off-line processes for validation of the subject name, which today often requires sending a mail to the administrator of that domain. This relationship can be easily demonstrated by having the zone administrator for the subject domain post the public key in the DNS and digitally sign the resulting zone.</t>   <t>A high-level description about the different options offered by DANE can be found in <xref target="IETF-Journal-DANE"/> and the authoritative version can be found in RFC 6698 <xref target="RFC6698"/>.</t>   	  </section> 	  	  <section title="Certificate Transparency"> 	    <t>RFC 6962 <xref target="RFC6962"/> specifies Certificate Transparency, a protocol for publicly logging the existence of certificates as they are issued or observed, in a manner that allows anyone to audit   certificate authority (CA) activity and notice the issuance of suspect certificates as well as to audit the certificate logs themselves.  The intent is that eventually clients would refuse to honor certificates that do not appear in a log, effectively forcing CAs to add all issued certificates to the logs.</t>	   <t>The publicly auditable, append-only logs of all issued certificates does not prevent misissue but allows    interested parties to detect misissuance.</t>   <t>While various projects, including the EFF with their SSL Observatory <xref target="SSL-Observatory"/>, have scanned the Internet to collect all certificates of TLS servers to complete (in presence of IPv6, which makes scanning the Internet much more difficult and the deployment of the TLS Server Name Indication <xref target="RFC6066"/>) the cooperation from all CAs of from certificate owners is required.</t>      <t>The expected operation is as follows: CAs or certificate owners contact logs and upload certificates, as they issue them. In response, they receive a Signed Certificate Timestamp (SCT). The SCT is the log's promise to incorporate the certificate in the Merkle Tree, which is the data structure used by the log, within a fixed amount of time. Everyone can check the log for consistency. Particularly website operators will  have an interest to regularly check the logs for misissuance of certificates. TLS clients on the other hand are not expected to directly communicate with logs to avoid the communication overhead. Instead, the TLS servers provides the SCT along with the certificate within the TLS handshake. TLS clients reject certificates that do not have a valid SCT for the end entity certificate. Since there is ideally more than one log TLS servers need to provide SCTs from multiple logs to the client.</t>   <t>This document has gone through a public review process, and has been approved by the Internet Engineering Steering Group and published an experimental RFC.</t>	  </section> 	  	  <section anchor="key-pinning" title="Public Key Pinning for HTTP">	    <t><xref target="I-D.ietf-websec-key-pinning"/> describes a solution for instruct user agents (UAs) to remember ("pin") certificates (end entity certificates or CA certs) for a given period of time.  During that time, UAs will require that the host present a certificate chain including at least one Subject Public Key Info structure whose fingerprint matches one of the pinned fingerprints for that host.</t>				<t>While the specification provides a number of instructions for the Website operator to indicate towards the UA the basic operation is rather simple and assumes a trust-on-first-use policy. To deal with the change of certificates or other failure scenarios the concept of a backup pin is utilized.  A Backup Pin is a fingerprint for the public key of a secondary, not-yet-deployed key pair.  The operator keeps the backup key pair offline, and sets a pin for it in the Public-Key-Pins header.  Then, in case the operator loses control of their   primary private key, they can deploy the backup key pair. An interesting feature of the specification is to report pin validation failure.</t>           <t>When a pin validation failure occurs the expectation is that the user is notified about the inconsistency (with optionally reporting taking place in the background).</t> 				<t>This document is the product of the IETF Web Security working group.</t>	  </section> 	  	  <section title="Trust Assertions for Certificate Keys (TACK)">	  	  <t>Similarly to the key pinning solution described in <xref target="key-pinning"/> TACK <xref target="I-D.perrin-tls-tack"/> also aims to enables a TLS server to   support "pinning" to a self-chosen signing key. There are, however, a number of substantial differences in the design despite the similarity of the name.</t>      <t>TLS server operators create a so-called "TACK signing key" (TSK) and sign their own keys used by TLS servers. A TACK pin then associates a hostname, a TSK, and various parameters (including pin creating time, and lifetime of the pin). A TLS server operator may change a key for a server at any point in time since the TSK will be unchanged. The existing public key infrastructure is replaced by a form of self-signed certificates. Clients store the TACK pins in their pin stores, which they may have obtained from different sources. Although the focus of the specification is to obtain the TACK pins via a TLS extension from the server directly a mechanism to obtain these TACK pins from a third party infrastructure is envisioned, although outside the scope of the specification. When TACK pins are obtained from the TLS server directly they follow a trust-on-first-use approach; a third party distribution mechanism may have additional security properties.</t>      <t>For incremental deployment the TLS client uses the extension mechanism of TLS to indicate support for the TACK extension by including a new TLS extension type in the ClientHello message. A TLS server that does not support TACK will reply with an ordinary certificate. In case the TLS server supports the extension it replies with the newly defined tack structure, which contains the TACK pin for that server.</t>   <t>This specification is an individual submission to the IETF.</t>	  <t>[Editor's Note: The document says in some places that the proposal also works with certificates but I fail to see the details since the TLS server key is signed with the TSK.]</t>	  </section> 	  	</section> 	      <section anchor="security" title="Security Considerations">      <t>This entire document is about security.</t>    </section>    <section anchor="iana" title="IANA Considerations">       <t>This document does not require actions by IANA.</t>    </section>    <section title="Acknowledgements">      <t>We would like to thank all participants of the NIST workshop on "Improving Trust in the Online Marketplace", April 10-11 2013, for sharing their views with the community. We would also like to thank the authors of various solution proposals for their work.</t>    </section>  </middle>  <back>    <references title="Normative References"> 	&RFC2119; 	&RFC6962;    &RFC6698;	&RFC4033; 	&RFC6066; 	&RFC4034; 	&RFC4035;    &I-D.ietf-websec-key-pinning;	&RFC3280;    &I-D.perrin-tls-tack;	</references>	    <references title="Informative References"> 	     <reference anchor="DigiNotar">        <front>          <title>DigiNotar SSL certificate hack amounts to cyberwar, says expert</title>          <author fullname="Charles Arthur" initials="C." surname="Arthur"></author>          <date month="Sep" year="2011" />        </front>        <seriesInfo name=""                    value="URL: http://www.guardian.co.uk/technology/2011/sep/05/diginotar-certificate-hack-cyberwar" />        <format target="http://www.guardian.co.uk/technology/2011/sep/05/diginotar-certificate-hack-cyberwar"                type="HTML" />      </reference>	  	    <reference anchor="Comodo">        <front>          <title>The Recent RA Compromise</title>          <author fullname="Phillip Hallam-Baker" initials="P." surname="Hallam-Baker"></author>          <date month="Mar" year="2011" />        </front>        <seriesInfo name=""                    value="URL: http://blogs.comodo.com/it-security/data-security/the-recent-ra-compromise/" />        <format target="http://blogs.comodo.com/it-security/data-security/the-recent-ra-compromise/"                type="HTML" />      </reference>        <reference anchor="SSL-Observatory">        <front>          <title>The EFF SSL Observatory</title>          <author>		  <organization>EFF</organization>		  </author>          <date month="Oct" year="2013" />        </front>        <seriesInfo name=""                    value="URL: https://www.eff.org/observatory" />        <format target="https://www.eff.org/observatory"                type="HTML" />      </reference>	  	    <reference anchor="IETF-Journal-DANE">        <front>          <title>DANE: Taking TLS Authentication to the Next Level Using DNSSEC, IETF Journal</title>          <author fullname="Richard Barnes" initials="R." surname="Barnes"></author>          <date month="Oct" year="2011" />        </front>        <seriesInfo name=""                    value="URL: http://www.internetsociety.org/articles/dane-taking-tls-authentication-next-level-using-dnssec" />        <format target="http://www.internetsociety.org/articles/dane-taking-tls-authentication-next-level-using-dnssec"                type="HTML" />      </reference>              </references>  </back></rfc>