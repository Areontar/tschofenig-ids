<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<rfc category="std" ipr="trust200902" docName="draft-korhonen-dime-e2e-security-00.txt">
  <?rfc toc="yes" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc compact="no" ?>
  <?rfc iprnotified="no" ?>
  <?rfc strict="yes" ?>
  <front>
    <title abbrev="Diameter E2E Security">Diameter End-to-End Security: Keyed Message Digests, Digital Signatures, and Encryption</title>
    
    <author initials='J.' surname="Korhonen" fullname='Jouni Korhonen'>
           <organization abbrev="Nokia Siemens Networks">Nokia Siemens Networks</organization>
            <address>
                <postal>
                    <street>Linnoitustie 6</street>
                    <code>FI-02600 Espoo</code>
                    <country>FINLAND</country>
                </postal>
                <email>jouni.nospam@gmail.com</email>
             </address>
        </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Nokia Siemens Networks</organization>
      <address>
        <postal>
          <street>Linnoitustie 6</street>
          <city>Espoo</city>
          <code>02600</code>
          <country>Finland</country>
        </postal>
        <phone>+358 (50) 4871445</phone>
        <email>Hannes.Tschofenig@gmx.net</email>
        <uri>http://www.tschofenig.priv.at</uri>
      </address>
    </author>    
    <date year="2012"/>
    <area>OPS</area>
    <workgroup>DIME</workgroup>
    <keyword>I-D</keyword>
    <keyword>Internet-Draft</keyword>
    <keyword>Diameter</keyword>
    <keyword>End-to-End Security</keyword>
    <abstract>
      <t>TBD</t>
    </abstract>
  </front>
  <middle>

    <!-- ******************************************************************************* -->
    <section anchor="introduction" title="Introduction">
    
   <t>The Diameter base protocol <xref target="I-D.ietf-dime-rfc3588bis"/> 
   leverages IPsec and TLS for mutual authentication between neighboring Diameter 
   nodes and for channel security offering data origin authentication, integrity 
   and confidentiality protection. The Diameter base protocol, however, also 
   defines Diameter agents, namely Relay Agents, Proxy Agents, Redirect Agents, 
   and Translation Agents.</t>
   
   <t>Relay Agents are Diameter agents that accept requests and route
   messages to other Diameter nodes based on information found in the
   messages. Since Relays do not perform any application level processing, they
   provide relaying services for all Diameter applications.</t>
   
   <t>Similarly to Relays, Proxy Agents route Diameter messages using the
   Diameter routing table.  However, they differ since they modify
   messages to implement policy enforcement.</t>
   
   <t>Redirect Agents do not relay messages, and only return an answer with 
   the information necessary for Diameter agents to communicate directly, they 
   do not modify messages. Redirect Agents do not have negative impacts on 
   end-to-end security and are therefore not considered in this document.</t>
   
   <t>A Translation Agent is a device that provides translation between two
   protocols. To offer end-to-end security across different protocol requires 
   the ability to convey and process the AVPs defined in this document by both 
   end points. Since such support is very likely not available this document 
   does not cover this functionality.</t> 

   <t>This Diameter extension specifies how AVP authentication, integrity and 
   confidentiality protection can be offered using either symmetric or 
   asymmetric cryptography. As a solution mechanism Javascript Object Signing 
   and Encryption (JOSE) is utilized. JOSE offers a simple encoding with small 
   set of features ideal for the purpose of Diameter.</t>
   
   <t>This document focuses on protecting Diameter AVP and leaves the key 
   distribution solution to a separate specification. To offer the functionality 
   two AVPs are defined: Signed-Data and Encrypted-Data.</t>
     
         </section>

    <!-- ******************************************************************************* -->

    <section title="Terminology">
      <t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD
        NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as
        described in <xref target="RFC2119">RFC 2119</xref>.</t>
    
    </section>

    <!-- ******************************************************************************* -->

    <section title="AVP Encoding"> 
    
    
    <section title="Signed-Data AVP"> 

   <t>The Signed-Data AVP (AVP Code TBD) is of type OctetString and
   utilizes the JSON Web signature (JWS) mechanism defined in 
   <xref target="I-D.ietf-jose-json-web-signature"/>.</t> 

   <t>JWS represents digitally signed or HMACed content using JSON data
   structures.  The representation in <xref target="I-D.ietf-jose-json-web-signature"/> 
   consists of three parts: the JWS 
   header, the JWS payload, and the JWS signature. This document only makes use 
   of the JWS header and the JWS signature - the JWS payload corresponds to the Diameter 
   AVPs that shall be protected using a keyed message digest or a digital signature.</t>
         
   <t>To package a set of AVPs for signing, the AVPs are first
   concatenated in the order in which they occur in the Diameter
   message. The entire AVP MUST be input to the signing process, from
   the first byte of the AVP code to the last byte of the AVP data,
   including all other fields, length, reserved/flags, and optional
   vendor IDs, and padding.  The AVP MUST be input to the signing
   process in network byte order.</t>

   <t>The signature is calculated over all AVPs following the Signed-Data AVP.
   For the design of the Signed-Data AVP as proposed by this document the 
   AVPs themselves are not carried within the Signed-Data AVP (for example in the JWT payload). Instead, 
   the digest is computed over these AVPs and placed into the JWS signature.</t>
   
<!--   Multiple Diameter entities MAY
   add their signatures to an existing CMS-Signed-Data AVP using the
   countersignature attribute, defined in section 11.4 of [3]. The
   countersignature attribute requires that the signatures occur
   sequentially, meaning that each node's signature covers the existing
   signatures in the CMS object. A countersignature MUST cover all AVPs
   in the message that have the 'P' bit enabled (i.e. the same AVPs as
   the first signature). Receiving Diameter nodes MAY, but need not, be
   able to support the use of the countersignature attribute.
-->

   <t>If a receiver detects errors with the processing of the Signed-Data AVP
   it may return one of the errors defined in <xref target="error"/>.</t>

   <t>When AVPs are to be both encrypted and signed, the Encrypted-Data
   AVP MUST be created first. This means that signing is
   "outside" encryption.</t>
   
   <t>Here is an example: Imagine the following AVPs from the QoS-Resources AVP in the QoS-Install Request (defined in RFC 5866 <xref target="RFC5866"/>
   message shall be signed. The resulting example message has the following structure:
  
<figure title="Example Diameter Message with Signed-Data AVP">
<artwork><![CDATA[
      <QoS-Install-Request> ::= < Diameter Header: 327, REQ, PXY >
                              < Session-Id >
                              { Auth-Application-Id }
                              { Origin-Host }
                              { Origin-Realm }
                              { Destination-Realm }
                              { Auth-Request-Type }
                              Signed-Data
                              QoS-Resources                              
]]></artwork>
         </figure>
      </t>
 
    <t>The Signed-Data AVP in this example may contain a JWS Header that indicates the 
    use of the HMAC SHA-256 algorithm with the key id 'abc123':
                 <figure title="Example JWS Header">
                    <artwork><![CDATA[
   {"typ":"JWT",
    "alg":"HS256",
    "kid":"abc123"}
]]></artwork>
         </figure>
     </t>
    
    </section> 
    
    <section title="Encrypted-Data AVP"> 
    
    <t>The Encrypted-Data AVP (AVP Code TBD) is of type OctetString and
   contains the JSON Web Encryption (JWE) data structure and consists of 
   three parts: the JWE Header, the JWE Encrypted Key, and the JWE Ciphertext.  
   The three parts are 
   represented as the concatenation of the encoded strings in that
   order, with the three strings being separated by period ('.')
   characters. JWE does not add a content integrity check if not
   provided by the underlying encryption algorithm.
   </t>
   
   <t>
   A single AVP or an entire list of AVPs MUST be input to the encryption process, from the
   first byte of the AVP code to the last byte of the AVP data,
   including all other fields, length, reserved/flags, and optional
   vendor IDs, and padding. The AVP MUST be input to the encryption
   process in network byte order, and the encryptor is free to order
   AVPs whatever way it chooses.   When AVPs are to be both encrypted and authenticated, the 
   Encrypted-Data AVP MUST be created first.
   </t>

   <t>Note that the usage of the Encrypted-Data AVP requires explicit support by the Diameter application
   since a receiving Diameter node must first decrypt the content of the Encrypted-Data AVP in order to 
   evaluate the AVPs carried in the message. In case that a Diameter node is unable to understand 
   the Encrypted-Data AVP and ignores the AVP then two possible outcomes are possible: First, if the encrypted 
   AVPs are optional then their content is not considered by the receiving Diameter server without any indication 
   to the sender that they have not been processes. Worse, in the second case when the encryptypted AVPs are mandatory 
   to be processed then the receiving Diameter node will return an error that may not inform the sender about the 
   failure to decrypt the Encrypted-Data AVP. Consequently, the usage of the Encrypted-Data AVP may require changes to the ABNF definition of a Diameter application. 
   </t>
   
   <t>
   If a receiver detects that the contents of the CMS-Data AVP is
   invalid, it SHOULD return the new Result-Code AVP value defined in
   <xref target="error"/>.</t> 
   
    </section> 
       
    </section> 

    <!-- ******************************************************************************* -->


    <section anchor="error" title="Result-Code AVP Values"> 

   <t>This section defines new Diameter result code values for usage with Diameter applications.</t> 
   
   <section title="Transient Failures"> 

   <t>
   Errors that fall within the transient failures category are used to
   inform a peer that the request could not be satisfied at the time it
   was received, but MAY be able to satisfy the request in the future.
   </t>
      
   <t><list style="hanging"> 
   <t hangText="DIAMETER_KEY_UNKNOWN (TBD)"><vspace blankLines="1"/>
         This error code is returned when a Signed-Data or an 
         Encrypted-Data AVP is received that was generated using a key
         that cannot be found in the key store. This error may, for example, 
         be caused if 
         one of the endpoints of an end-to-end security association lost
         a previously agreed upon key, perhaps as a result of a reboot.
         To recover a new end-to-end key establishment procedure may need to
         be invoked. 
   </t>
   </list> 
   </t>
   
   </section> 

   <section title="Permanent Failures">

   <t>
   Errors that fall within the permanent failures category are used to
   inform the peer that the request failed, and should not be attempted
   again.
   </t>

   <t><list style="hanging"> 
   <t hangText="DIAMETER_DECRYPTION_ERROR (TBD)"><vspace blankLines="1"/>
         This error code is returned when an Encrypted-Data AVP is received
         and the decryption fails for an unknown reason.
         </t>
   <t hangText="DIAMETER_SIGNATURE_ERROR (TBD)"><vspace blankLines="1"/>
         This error code is returned when a Signed-Data AVP is received
         and the verification fails for an unknown reason.
         </t>
   </list> 
   </t>
   
   </section>       

</section> 

    <!-- ******************************************************************************* -->

    <section title="IANA Considerations">
      <t>IANA is requested to allocate AVP codes for the following AVPs:
               <figure>
                    <artwork><![CDATA[
    +------------------------------------------------------------------+
    |                                       AVP  Section               |
    |AVP Name                               Code Defined   Data Type   |
    +------------------------------------------------------------------+
    |Signed-Data                            TBD  3.1       OctetString |
    |Encrypted-Data                         TBD  3.2       OctetString |
    +------------------------------------------------------------------+
]]></artwork>
         </figure>
      </t>
              
      <t>This specification additionally defines a few Result-Code AVP values, see 
      <xref target="error"/>.</t>
    </section>

    <!-- ******************************************************************************* -->

    <section title="Security Considerations">
      <t>TBD</t>
    </section>

    <!-- ******************************************************************************* -->

    <section title="Acknowledgements">
      <t>We would like to thank the authors of <xref target="I-D.ietf-aaa-diameter-e2e-sec"/> for their work on 
      CMS end-to-end security for Diameter. Their document inspired us. </t>
    </section>

    <!-- ******************************************************************************* -->

  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119" ?>
      <?rfc include="reference.I-D.ietf-dime-rfc3588bis"?>
      <?rfc include="reference.I-D.ietf-jose-json-web-signature"?>
      <?rfc include="reference.I-D.ietf-jose-json-web-encryption"?> 
    </references>
    <references title="Informational References">
      
         <reference anchor="I-D.ietf-aaa-diameter-e2e-sec">
        <front>
          <title>Diameter End-2-End Security Extension</title>
          <author fullname="Pat Calhoun" initials="P." surname="Calhoun"> </author>
          <date year="2001"/>
        </front>
<format type="TXT" target="http://tools.ietf.org/html/draft-ietf-aaa-diameter-e2e-sec-02"/>
      </reference>
      <?rfc include="reference.RFC.5866" ?>
    </references>
   </back>
</rfc>
