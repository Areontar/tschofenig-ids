



CORE                                                            S. Lemay
Internet-Draft                                      V. Solorzano Barboza
Intended status: Standards Track                      Zebra Technologies
Expires: May 22, 2015                                      H. Tschofenig
                                                                ARM Ltd.
                                                              C. Bormann
                                                 Universitaet Bremen TZI
                                                       November 18, 2014


A TCP and TLS Transport for the Constrained Application Protocol (CoAP)
               draft-tschofenig-core-coap-tcp-tls-02.txt

Abstract

   The Hypertext Transfer Protocol (HTTP) has been designed with TCP as
   an underlying transport protocol.  The Constrained Application
   Protocol (CoAP), which has been inspired by HTTP, has on the other
   hand been defined to make use of UDP.  Reliable delivery, a simple
   congestion control mechanism, and flow control had been added to the
   CoAP protocol.  UDP is a good choice for networks that do not perform
   any form of filtering and firewalling.  There are, however, many
   deployment environments where UDP is either firewalled or subject to
   deep packet inspection.  These environments make the use of CoAP
   brittle.

   This document defines the use of CoAP over TCP as well as CoAP over
   TLS.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 22, 2015.






Lemay, et al.             Expires May 22, 2015                  [Page 1]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Constrained Application Protocol  . . . . . . . . . . . . . .   3
   4.  Message Format  . . . . . . . . . . . . . . . . . . . . . . .   5
   5.  CoAP URI  . . . . . . . . . . . . . . . . . . . . . . . . . .   6
     5.1.  coap+tcp URI scheme . . . . . . . . . . . . . . . . . . .   6
     5.2.  coaps+tcp URI scheme  . . . . . . . . . . . . . . . . . .   6
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
     7.1.  URI Schemes . . . . . . . . . . . . . . . . . . . . . . .   7
     7.2.  ALPN Protocol ID  . . . . . . . . . . . . . . . . . . . .   7
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   8
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .   8
     9.2.  Informative References  . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Introduction

   The Internet protocol stack is organized in layers, namely data link
   layer, network layer, transport layer, and the application layer.

   IP emerged as the waist of the hour glass and supports a variety of
   link layers and new link layer technologies can be added in the
   future, without affecting IP.

   Combined with the end-to-end principle the hour glass indicates the
   level of protocol understanding intermediaries need to have in order
   to exchange forward IP packets between a sender and a receiver
   (absent any specific application layer entities, like proxies or
   caches).  Having IP as the waist meant that anyone could extend the



Lemay, et al.             Expires May 22, 2015                  [Page 2]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


   layers above the network layer in the way they wanted to communicate
   end-to-end, including defining new transport layer protocols (as it
   was done with SCTP, and DCCP).

   Unfortunately, deployments departed from this ideal architecture.
   When the Constrained Application Protocol (CoAP) [RFC7252] was
   designed it was assumed that many Internet of Things (IoT)
   deployments would be clean-slate.  Today, we know that some
   deployments have to integrate well with existing enterprise
   infrastructure, where the use of UDP-based protocols is not well-
   received and firewalling use is very common.

   To make IoT devices work smoothly in these demanding environments
   CoAP has to make use of a different transport protocol, namely TCP
   [RFC0793] and in some situations even TLS [RFC5246].  This document
   describes a shim header that conveys length information about the
   included payload.  Modifications to CoAP are intentially avoided
   (e.g, to introduce optimizations).

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "MUST", "MUST NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Constrained Application Protocol

   The interaction model of CoAP over TCP is very similar to the one for
   CoAP over UDP with the key difference that TCP voids the need to
   replicate certain transport layer protocol features, such as reliable
   delivery, fragmentation and reassemply, as well as congestion
   control, at the CoAP level.  The protocol stack is shown in Figure 1.



















Lemay, et al.             Expires May 22, 2015                  [Page 3]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


           +----------------------+
           |      Application     |
           +----------------------+
           +----------------------+  \
           |  Requests/Responses  |  |
           |----------------------|  | CoAP
           |       Messages       |  |
           +----------------------+  /
           +-----------+    ^
           |    TLS    |    |
           +-----------+    v
           +----------------------+
           |          TCP         |
           +----------------------+


              Figure 1: The CoAP over TLS/TCP Protocol Stack

   TCP offers features that are not available in UDP and consequently
   got added to CoAP.  The first paradigm that can be omitted is the
   concept of ACKs in CoAP.  Since TCP offers reliabile delivery, there
   is not need to offer a redundant acknowledgement at the CoAP
   messaging layer.

   Hence, the only message model supported when using CoAP over TCP is
   the NON message model.  By nature, a NON over TCP is still
   transmitted reliably.  Figure 2 shows this message exchange
   graphically.


           Client              Server
              |                  |
              |   NON [0x01a0]   |
              +----------------->|
              |                  |


               Figure 2: NON Message Transmission over TCP.

   Because of the NON message model, the only supported request/response
   in CoAP is the NON type.  A response is sent back only if needed, as
   shown in Figure 3.









Lemay, et al.             Expires May 22, 2015                  [Page 4]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


           Client              Server
              |                  |
              |   NON [0x7a11]   |
              | GET /temperature |
              |   (Token 0x74)   |
              +----------------->|
              |                  |
              |   NON [0x23bc]   |
              |   2.05 Content   |
              |   (Token 0x74)   |
              |     "22.5 C"     |
              |<-----------------+
              |                  |


                      Figure 3: NON Request/Response.

4.  Message Format

   While CoAP was originaly design for UDP and encasulate features to
   add robostness and flexibility to the transaction, these features are
   not needed anymore due to the nature of TCP.  A delimiter is
   nevertheless needed to separate different payloads in a stream
   oriented transport protocol like TCP.  For this purpose, the length
   field is used as a delimiter.

   Figure 4 shows the CoAP message format as defined in RFC 7252.
   Figure 5 shows the 2-byte shim header carring length information
   prepending the CoAP message header.


       0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |Ver| T |  TKL  |      Code     |          Message ID           |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |   Token (if any, TKL bytes) ...
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |   Options (if any) ...
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |1 1 1 1 1 1 1 1|    Payload (if any) ...
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


              Figure 4: RFC 7252 defined CoAP Message Format.






Lemay, et al.             Expires May 22, 2015                  [Page 5]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


        0                   1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |        Message Length         |Ver| T |  TKL  |      Code     |
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      | Remaining CoAP Message Header ...
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


            Figure 5: CoAP Header with Prepending Shim Header.

   The 'Message Length' field is 16-bit unsigned integer in network byte
   order used as delimiter and to denote the length of the subsequent
   CoAP message (including the CoAP header but excluding this message
   length field) in bytes.  The semantic of the CoAP header fields is
   left unchanged.

5.  CoAP URI

   CoAP [RFC7252] defined the "coap" and "coaps" URI schemes for
   identifying CoAP resources and providing a means of locating the
   resource.  RFC 7252 defined these resources for use with CoAP over
   UDP.

   This specification introduces two new URI schemes, namely "coap+tcp"
   and "coaps+tcp".  The rules from Section 6 of [RFC7252] apply to
   these two new URI.

5.1.  coap+tcp URI scheme

   coap-URI = "coap+tcp:" "//" host [ ":" port ] path-abempty [ "?"
   query ]

   The semantic defined in Section 6.1 from [RFC7252] applies to this
   URI scheme.

5.2.  coaps+tcp URI scheme

   coap-URI = "coaps+tcp:" "//" host [ ":" port ] path-abempty [ "?"
   query ]

   The semantic defined in Section 6.2 from [RFC7252] applies to this
   URI scheme.








Lemay, et al.             Expires May 22, 2015                  [Page 6]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


6.  Security Considerations

   This document defines how to convey CoAP over TCP and TLS.  It does
   not introduce new vulnerabilities beyond those described already in
   the CoAP specification.  CoAP [RFC7252] makes use of DTLS 1.2 and
   this specification consequently uses TLS 1.2 [RFC5246].  CoAP MUST
   NOT be used with older versions of TLS.  Guidelines for use of
   ciphersuites and TLS extensions can be found in
   [I-D.ietf-dice-profile].

   When CoAP is exchanged over TLS port 443 then the "TLS Application
   Layer Protocol Negotiation Extension" [I-D.ietf-tls-applayerprotoneg]
   MUST be used to allow demultiplexing at the server-side unless out-
   of-band information ensures that the client only interacts with a
   server that is able to demultiplex CoAP messages over port 443.  This
   would, for example, be true for many Internet of Things deployments
   where clients are pre-configured to only ever talk with specific
   servers.

   When CoAP over TLS is used then the shim header that includes the
   length information is redundant since the TLS protocol headers
   already include length information.  As such, the shim header MUST be
   omitted when CoAP messages are carried over TLS.

7.  IANA Considerations

7.1.  URI Schemes

   This document registers two new URI schemes, namely "coap+tcp" and
   "coaps+tcp", for the use of CoAP over TCP and for CoAP over TLS over
   TCP, respectively.  The "coap+tcp" and "coaps+tcp" URI schemes can
   thus be compared to the "http" and "https" URI schemes.

   The syntax of the "coap" and "coaps" URI schemes is specified in
   Section 6 of [RFC7252] and this document re-uses their semantics with
   the sole exception that TCP is used as a transport protocol.

   IANA is requested to add these new URI schemes to the registry
   established with [RFC4395].

7.2.  ALPN Protocol ID

   This document requests a value from the "Application Layer Protocol
   Negotiation (ALPN) Protocol IDs" created by
   [I-D.ietf-tls-applayerprotoneg]:

   Protocol:  CoAP




Lemay, et al.             Expires May 22, 2015                  [Page 7]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


   Identification Sequence:  0x63 0x6f 0x61 0x70 ("coap")

   Specification:  This document.

8.  Acknowledgements

   We would like to thank Michael Koster, Zach Shelby, Matthias
   Kovatsch, and Szymon Sasin for their feedback.

9.  References

9.1.  Normative References

   [I-D.ietf-dice-profile]
              Tschofenig, H., "A Datagram Transport Layer Security
              (DTLS) 1.2 Profile for the Internet of Things", draft-
              ietf-dice-profile-05 (work in progress), October 2014.

   [I-D.ietf-tls-applayerprotoneg]
              Friedl, S., Popov, A., Langley, A., and S. Emile,
              "Transport Layer Security (TLS) Application Layer Protocol
              Negotiation Extension", draft-ietf-tls-applayerprotoneg-05
              (work in progress), March 2014.

   [RFC0793]  Postel, J., "Transmission Control Protocol", STD 7, RFC
              793, September 1981.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC4395]  Hansen, T., Hardie, T., and L. Masinter, "Guidelines and
              Registration Procedures for New URI Schemes", BCP 35, RFC
              4395, February 2006.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008.

   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, "The Constrained
              Application Protocol (CoAP)", RFC 7252, June 2014.

9.2.  Informative References

   [RFC6347]  Rescorla, E. and N. Modadugu, "Datagram Transport Layer
              Security Version 1.2", RFC 6347, January 2012.







Lemay, et al.             Expires May 22, 2015                  [Page 8]

Internet-Draft         TCP/TLS Transport for CoAP          November 2014


Authors' Addresses

   Simon Lemay
   Zebra Technologies
   820 W. Jackson Blvd.suite 700
   Chicago  60607
   United States of America

   Phone: +1-847-634-6700
   Email: slemay@zebra.com


   Valik Solorzano Barboza
   Zebra Technologies
   820 W. Jackson Blvd. suite 700
   Chicago  60607
   United States of America

   Phone: +1-847-634-6700
   Email: vsolorzanobarboza@zebra.com


   Hannes Tschofenig
   ARM Ltd.
   110 Fulbourn Rd
   Cambridge  CB1 9NJ
   Great Britain

   Email: Hannes.tschofenig@gmx.net
   URI:   http://www.tschofenig.priv.at


   Carsten Bormann
   Universitaet Bremen TZI
   Postfach 330440
   Bremen  D-28359
   Germany

   Phone: +49-421-218-63921
   Email: cabo@tzi.org











Lemay, et al.             Expires May 22, 2015                  [Page 9]
